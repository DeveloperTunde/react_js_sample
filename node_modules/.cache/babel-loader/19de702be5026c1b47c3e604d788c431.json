{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/dashboard/EditChannel.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt, FaPencilAlt } from 'react-icons/fa';\nimport Thumbnailbg from './../assets/images/bgthumbnail.png';\nimport User from './../assets/images/user.png';\nimport IndexTabs from './components/IndexTabs';\nimport UploadVideoForm from './components/UploadVideoForm';\nimport AlertComponent from './../reuseables/Alert';\nimport Gif from '../assets/images/mygif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createChannel = () => {\n      const formData = new FormData();\n\n      if (this.state.loggeduser != null) {\n        if (this.state.channelname != '') {\n          formData.append(\"channellogo\", this.state.channellogo);\n          formData.append(\"channelbanner\", this.state.channelbanner2);\n          formData.append(\"channelname\", this.state.channelname);\n          formData.append(\"user\", this.state.loggeduser);\n          formData.append(\"channelid\", this.props.match.params.id);\n          fetch('/videostreaming/editchannel.php', {\n            method: 'POST',\n            body: formData,\n            headers: {\n              Accept: 'application/json'\n            }\n          }).then(response => response.text()).then(responseJSON => {\n            this.showAlert(true);\n            this.setState({\n              alerttitle: 'Success!',\n              alertcontent: `${responseJSON}`,\n              alerttype: 'success'\n            });\n            this.props.closeModal();\n            setTimeout(() => {\n              this.showAlert(false);\n            }, 4000);\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          this.showAlert(true);\n          this.setState({\n            alerttitle: 'Error',\n            alertcontent: 'Please fill the channel name box',\n            alerttype: 'warning'\n          });\n        }\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Error',\n          alertcontent: 'Please login before you can create a channel',\n          alerttype: 'warning'\n        });\n      }\n\n      setTimeout(() => {\n        this.showAlert(false);\n      }, 4000);\n    };\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.showEdit = e => {\n      this.setState({\n        showedit: e\n      });\n    };\n\n    this.getUserEmail = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        loggeduser: useremail\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showedit: false,\n      thisvideo: [],\n      showmodal: false,\n      channellogo: '',\n      channelbanner2: '',\n      loggeduser: '',\n      channelname: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      ischannelAvailable: false,\n      mychannels: [],\n      isloaded: false,\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display'\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  BannerUpload(inp) {\n    this.setState({\n      channelbanner2: inp[0]\n    });\n    let file = inp[0];\n    let filesize = file.size;\n  }\n\n  setUploadFile(e) {\n    this.setState({\n      channellogo: e[0]\n    });\n    let file = e[0];\n    let filesize = file.size; //console.log(file);\n  }\n\n  getChannels() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/mychannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] == 'true') {\n        this.setState({\n          ischannelAvailable: true,\n          mychannels: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON['output']);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUserEmail();\n    this.getChannels();\n    this.getChannel();\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle,\n      mychannels\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_form_wrapper_a\",\n              style: {\n                paddingTop: '2vh'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login_title\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Edit Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Channel Name [18 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"channelname\",\n                  value: this.state.channelname,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                hidden: true,\n                ref: input => this.inputElement = input,\n                onChange: e => this.setUploadFile(e.target.files)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file_b_a\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Click here to change channel logo\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 71\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file_c_a\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tertiaryButton\",\n                  onClick: () => this.inputElement.click(),\n                  children: \"Change Logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 32\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.channellogo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                hidden: true,\n                ref: input => this.bannerElement = input,\n                onChange: e => this.BannerUpload(e.target.files)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file_b_a\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Click here to select change banner \", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 74\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file_c_a\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tertiaryButton\",\n                  onClick: () => this.bannerElement.click(),\n                  children: \"Change Banner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 32\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.state.channelbanner2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"primaryButton form_group upload_video_btn\",\n                style: {\n                  textAlign: 'center',\n                  marginTop: '4vh'\n                },\n                onClick: () => this.createChannel(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Save Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UploadVideoForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this);\n  }\n\n  getChannel() {\n    let videoid = localStorage.getItem('editing');\n    fetch('/videostreaming/singlechannel.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        channelid: this.props.match.params.id\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        channelid: responseJSON['output'][0]['data'][0].id,\n        channelname: responseJSON['output'][0]['data'][0].name,\n        channelowner: responseJSON['output'][0]['data'][0].owner,\n        isloaded: true\n      }); // console.log(responseJSON['output'][0]['data'][0]);\n    });\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default EditVideo;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/dashboard/EditChannel.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaEye","FaSquare","FaShareAlt","FaPencilAlt","Thumbnailbg","User","IndexTabs","UploadVideoForm","AlertComponent","Gif","EditVideo","constructor","props","createChannel","formData","FormData","state","loggeduser","channelname","append","channellogo","channelbanner2","match","params","id","fetch","method","body","headers","Accept","then","response","text","responseJSON","showAlert","setState","alerttitle","alertcontent","alerttype","closeModal","setTimeout","catch","error","console","log","setShow","e","showmodal","showEdit","showedit","getUserEmail","useremail","sessionStorage","getItem","thisvideo","togglealert","ischannelAvailable","mychannels","isloaded","isrightside","isleftsidebar","handleInput","event","target","value","name","BannerUpload","inp","file","filesize","size","setUploadFile","getChannels","JSON","stringify","json","componentDidMount","getChannel","render","user","toggleLeftSidebar","paddingTop","color","bind","input","inputElement","files","click","bannerElement","textAlign","marginTop","showmodal2","setShow2","videoid","localStorage","channelid","channelowner","owner","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt, FaPencilAlt } from 'react-icons/fa'\nimport Thumbnailbg from './../assets/images/bgthumbnail.png'\nimport User from './../assets/images/user.png'\nimport IndexTabs from './components/IndexTabs'\nimport UploadVideoForm from './components/UploadVideoForm'\nimport AlertComponent from './../reuseables/Alert'\nimport Gif from '../assets/images/mygif.gif'\n\n\nclass EditVideo extends Component {\n    constructor(props){\n       super(props);\n       this.state={\n           showmodal: false,\n           showedit: false,\n           thisvideo:[],\n           showmodal: false,\n           channellogo:'',\n           channelbanner2:'',\n           loggeduser:'',\n           channelname:'',\n           togglealert:false,\n           alerttitle:'', alertcontent:'', alerttype:'',\n           ischannelAvailable: false,\n           mychannels:[],\n           isloaded:false,\n           isrightside:'desktop_display',\n           isleftsidebar:'desktop_display',\n       }\n\n       \n    }\n\n showAlert(e){\n     this.setState({\n         togglealert: e\n     })\n  }\n \n  \n  handleInput(event) {\n       const target = event.target;\n       const value = target.value;\n       const name = target.name;\n       this.setState({\n         [name]: value\n       });\n     }\n\n      BannerUpload(inp){\n        this.setState({\n          channelbanner2:inp[0]\n        })\n        let file = inp[0];\n        let filesize = file.size;\n     \n      }\n\n\n      setUploadFile(e){\n        this.setState({\n          channellogo:e[0]\n        })\n        let file = e[0];\n        let filesize = file.size;\n    \n    \n        //console.log(file);\n      \n      }\n    \n      \n \n\n     createChannel =() =>{\n\n        const formData = new FormData();\n      \n        if (this.state.loggeduser != null) {\n           if (this.state.channelname !='' ) {      \n                  formData.append(\"channellogo\", this.state.channellogo);\n                  formData.append(\"channelbanner\", this.state.channelbanner2);\n                  formData.append(\"channelname\", this.state.channelname);\n                  formData.append(\"user\", this.state.loggeduser);\n                  formData.append(\"channelid\", this.props.match.params.id);\n      \n      \n                  fetch('/videostreaming/editchannel.php',\n                  {\n                      method: 'POST',                   \n                      body: formData,\n                      headers: {\n                          Accept: 'application/json',\n                        },\n                  }\n                  ).then((response) => response.text())\n                  .then((responseJSON) => {\n                  this.showAlert(true);\n                  this.setState({\n                    alerttitle:'Success!', alertcontent:`${responseJSON}`, alerttype:'success'\n                  })\n                  this.props.closeModal();\n      \n                  setTimeout(() => {\n                    this.showAlert(false);\n                  }, 4000);\n      \n      \n                  }).catch((error) => {\n                     console.log(error);  \n      \n                  })\n      \n              \n           }else{\n            this.showAlert(true);\n            this.setState({\n              alerttitle:'Error', alertcontent: 'Please fill the channel name box', alerttype:'warning'\n            })\n           }\n        }else{\n          this.showAlert(true);\n          this.setState({\n            alerttitle:'Error', alertcontent: 'Please login before you can create a channel', alerttype:'warning'\n          })\n      \n          \n        }\n        setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n      \n      }\n\n\n\n\ngetChannels(){\n let useremail =  sessionStorage.getItem('userReg');\n   fetch('/videostreaming/mychannels.php', {\n         method: 'POST',\n         headers: {\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n            useremail: useremail\n         })\n     })\n \n     .then((response) => response.json())\n     .then((responseJSON) => {\n         if (responseJSON['output'][0]['success'] == 'true') {\n             this.setState({\n                  ischannelAvailable: true,\n                  mychannels: responseJSON['output'][0]['data']\n             })\n          }\n         // console.log(responseJSON['output']);\n         }).catch((error) =>{\n            // console.log(error);\n         })\n \n}\n setShow = (e) =>{\n   this.setState({\n       showmodal:e\n   })\n }\n\n\n showEdit = (e) =>{\n   this.setState({\n       showedit:e\n   })\n }\n  \n getUserEmail = () =>{\n let useremail =  sessionStorage.getItem('userReg');\n this.setState({\n    loggeduser:useremail\n })\n }\n\n componentDidMount(){\n     this.getUserEmail();  \n     this.getChannels();\n     this.getChannel();\n          \n }\n    render() {\n       const {user}  = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle, mychannels} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                  <div className=\"user_wrapper\">\n                    \n                  <div className=\"file_form_wrapper_a\" style={{paddingTop:'2vh'}}>\n                        <div className=\"login_title\">\n                            <span>Edit Channel</span>\n                        </div>\n                        <div className=\"form_group\">\n                                <label>Channel Name [18 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <input type=\"text\"  \n                                       name=\"channelname\"\n                                       value={this.state.channelname} \n                                       onChange={this.handleInput.bind(this)}\n                                       maxLength={18}/>\n                           </div>\n                           <input type=\"file\" accept=\"image/*\"\n                                  hidden={true}\n                                  ref={input => this.inputElement = input}\n                                  onChange={(e) => this.setUploadFile(e.target.files)} \n                                  />\n                           <div className='file_b_a' >\n                               <span>Click here to change channel logo<s style={{color:'tomato'}}>*</s></span>\n                           </div>\n                           <div className='file_c_a'>\n                               <span className=\"tertiaryButton\" onClick={() => this.inputElement.click()}>Change Logo</span>\n                               <span>{this.state.channellogo.name}</span>\n                           </div>\n\n                           <input type=\"file\" accept=\"image/*\"\n                                  hidden={true}\n                                  ref={input => this.bannerElement = input}\n                                  onChange={(e) => this.BannerUpload(e.target.files)} \n                                  \n                                  />\n                           <div className='file_b_a' >\n                               <span >Click here to select change banner <s style={{color:'tomato'}}>*</s></span>\n                           </div>\n                           <div className='file_c_a' >\n                               <span className=\"tertiaryButton\" onClick={() => this.bannerElement.click()}>Change Banner</span>\n                               <span>{this.state.channelbanner2.name}</span>\n                           </div>\n\n\n                          \n                           <div className=\"primaryButton form_group upload_video_btn\" style={{textAlign:'center', marginTop:'4vh'}} onClick={() =>this.createChannel()}>\n                               <span >Save Edit</span>\n                           </div>\n                           \n                        </div>\n                  </div>\n\n                  <div>\n                    <UploadVideoForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                  </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    getChannel(){\n        let videoid =  localStorage.getItem('editing');\n      \n        fetch('/videostreaming/singlechannel.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                channelid: this.props.match.params.id,\n            })\n        })\n    \n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    channelid: responseJSON['output'][0]['data'][0].id,\n                    channelname: responseJSON['output'][0]['data'][0].name,\n                    channelowner: responseJSON['output'][0]['data'][0].owner,\n                    isloaded:true\n                })\n                // console.log(responseJSON['output'][0]['data'][0]);\n            })\n       \n    }\n\n    toggleLeftSidebar(){\n\n      let isrightsidebar = this.state.isrightside;\n      if (isrightsidebar == 'mobile_display') {\n          this.setState({\n              isrightside:'desktop_display'\n          })\n      }\n\n      let isleftsidebar = this.state.isleftsidebar;\n      if (isleftsidebar == 'desktop_display') {\n          this.setState({\n              isleftsidebar:'mobile_display'\n          })\n      }else{\n          this.setState({\n              isleftsidebar:'desktop_display'\n          })\n      }\n  }\n\n}\n       \n\n\nexport default EditVideo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}