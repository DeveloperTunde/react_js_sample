{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/dashboard/EditVideo.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt, FaPencilAlt } from 'react-icons/fa';\nimport Thumbnailbg from './../assets/images/bgthumbnail.png';\nimport User from './../assets/images/user.png';\nimport IndexTabs from './components/IndexTabs';\nimport UploadVideoForm from './components/UploadVideoForm';\nimport AlertComponent from './../reuseables/Alert';\nimport Gif from '../assets/images/mygif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitEdit = () => {\n      const formData = new FormData();\n\n      if (this.state.videouploader != null) {\n        if (this.state.videotitle != '') {\n          if (this.state.videoshortdescription != '') {\n            if (this.state.videofulldescription != '') {\n              formData.append(\"videotitle\", this.state.videotitle);\n              formData.append(\"videocategory\", this.state.videocategory);\n              formData.append(\"channel\", this.state.channel);\n              formData.append(\"crop\", this.state.crop);\n              formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n              formData.append(\"videofulldescription\", this.state.videofulldescription);\n              formData.append(\"tags\", this.state.tags);\n              formData.append(\"videouploader\", this.state.videouploader); //<img src={Gif} className=\"alertloader\"/>\n\n              const Mylabel = /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please wait...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 30\n              }, this);\n\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Uploading',\n                alertcontent: Mylabel,\n                alerttype: 'success'\n              });\n              fetch('/videostreaming/editvideo.php', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  Accept: 'application/json'\n                }\n              }).then(response => response.json()).then(responseJSON => {\n                let status = responseJSON['output'][0]['status'];\n\n                if (status == 'true') {\n                  this.setState({\n                    alerttitle: 'Success!',\n                    alertcontent: 'The video has been edited successfully',\n                    alerttype: 'success'\n                  });\n                }\n\n                console.log(responseJSON);\n                setTimeout(() => {\n                  this.showAlert(false);\n                }, 4000);\n              }).catch(error => {\n                console.log(error);\n              });\n            } else {\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Error',\n                alertcontent: 'Please fill the video full description box',\n                alerttype: 'warning'\n              });\n              setTimeout(() => {\n                this.showAlert(false);\n              }, 4000);\n            }\n          } else {\n            this.showAlert(true);\n            this.setState({\n              alerttitle: 'Error',\n              alertcontent: 'Please fill the video short description box',\n              alerttype: 'warning'\n            });\n            setTimeout(() => {\n              this.showAlert(false);\n            }, 4000);\n          }\n        } else {\n          this.showAlert(true);\n          this.setState({\n            alerttitle: 'Error',\n            alertcontent: 'Please fill the video title box',\n            alerttype: 'warning'\n          });\n          setTimeout(() => {\n            this.showAlert(false);\n          }, 4000);\n        }\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Error',\n          alertcontent: 'Please login before you can upload video',\n          alerttype: 'warning'\n        });\n        setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n      }\n    };\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.showEdit = e => {\n      this.setState({\n        showedit: e\n      });\n    };\n\n    this.getUserEmail = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        videouploader: useremail\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showedit: false,\n      thisvideo: [],\n      videouploader: '',\n      videotitle: '',\n      videocategory: '',\n      crop: '',\n      channel: '',\n      videoshortdescription: '',\n      videofulldescription: '',\n      tags: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      ischannelAvailable: false,\n      mychannels: [],\n      isloaded: false,\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display'\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getChannels() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/mychannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] == 'true') {\n        this.setState({\n          ischannelAvailable: true,\n          mychannels: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON['output']);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUserEmail();\n    this.getChannels();\n    this.getVideo();\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle,\n      mychannels\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_form_wrapper3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Video Title [30 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 71\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"videotitle\",\n                  value: this.state.videotitle,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 30\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group form_group2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"videocategory\",\n                  value: this.state.videocategory,\n                  onChange: this.handleInput.bind(this),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nil\",\n                    children: \"No Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Youth in Agribusiness\",\n                    children: \"Youth in Agribusiness\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Climate change\",\n                    children: \"Climate change\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Crop production\",\n                    children: \"Crop production\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Plant health\",\n                    children: \"Plant health\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Biotechnology\",\n                    children: \"Biotechnology\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group form_group2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Crop Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"crop\",\n                  value: this.state.crop,\n                  onChange: this.handleInput.bind(this),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nil\",\n                    children: \"Select Crop Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"maize\",\n                    children: \"Maize\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"cassava\",\n                    children: \"Cassava\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group form_group2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Upload To A Channel \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"channel\",\n                  value: this.state.channel,\n                  onChange: this.handleInput.bind(this),\n                  children: [this.state.ischannelAvailable == false ? '' : /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nil\",\n                    children: \"No Channel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 41\n                  }, this), this.state.ischannelAvailable == false ? /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"nil\",\n                    children: \"No Channel [You have not created any channel]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this) : mychannels.map((channel, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: channel.id,\n                      children: channel.name\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 52\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group form_group2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Video Short Details [64 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 79\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"videoshortdescription\",\n                  value: this.state.videoshortdescription,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 64\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group \",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Video Full Details\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"videofulldescription\",\n                  value: this.state.videofulldescription,\n                  onChange: this.handleInput.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group \",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Video Tags [Separated by comma]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"tags\",\n                  value: this.state.tags,\n                  onChange: this.handleInput.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"primaryButton form_group upload_video_btn\",\n                onClick: () => this.submitEdit(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UploadVideoForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this);\n  }\n\n  getVideo() {\n    let videoid = localStorage.getItem('editing');\n    fetch('/videostreaming/singlevideo.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vidid: this.props.match.params.id\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        thisvideo: responseJSON['output'][0]['data'][0],\n        videotitle: responseJSON['output'][0]['data'][0].videotitle,\n        videocategory: responseJSON['output'][0]['data'][0].VideoCategory,\n        videoshortdescription: responseJSON['output'][0]['data'][0].videodescription,\n        videofulldescription: responseJSON['output'][0]['data'][0].videofulldescription,\n        channel: responseJSON['output'][0]['data'][0].videochannel,\n        crop: responseJSON['output'][0]['data'][0].videocrop,\n        videotitle: responseJSON['output'][0]['data'][0].videotitle,\n        videouploader: this.props.match.params.id,\n        isloaded: true\n      }); //console.log(responseJSON['output'][0]['data'][0]);\n    });\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default EditVideo;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/dashboard/EditVideo.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaEye","FaSquare","FaShareAlt","FaPencilAlt","Thumbnailbg","User","IndexTabs","UploadVideoForm","AlertComponent","Gif","EditVideo","constructor","props","submitEdit","formData","FormData","state","videouploader","videotitle","videoshortdescription","videofulldescription","append","videocategory","channel","crop","tags","Mylabel","showAlert","setState","alerttitle","alertcontent","alerttype","fetch","method","body","headers","Accept","then","response","json","responseJSON","status","console","log","setTimeout","catch","error","setShow","e","showmodal","showEdit","showedit","getUserEmail","useremail","sessionStorage","getItem","thisvideo","togglealert","ischannelAvailable","mychannels","isloaded","isrightside","isleftsidebar","handleInput","event","target","value","name","getChannels","JSON","stringify","componentDidMount","getVideo","render","user","toggleLeftSidebar","color","bind","map","i","id","showmodal2","setShow2","videoid","localStorage","vidid","match","params","VideoCategory","videodescription","videochannel","videocrop","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt, FaPencilAlt } from 'react-icons/fa'\nimport Thumbnailbg from './../assets/images/bgthumbnail.png'\nimport User from './../assets/images/user.png'\nimport IndexTabs from './components/IndexTabs'\nimport UploadVideoForm from './components/UploadVideoForm'\nimport AlertComponent from './../reuseables/Alert'\nimport Gif from '../assets/images/mygif.gif'\n\n\nclass EditVideo extends Component {\n    constructor(props){\n       super(props);\n       this.state={\n           showmodal: false,\n           showedit: false,\n           thisvideo:[],\n           videouploader:'',\n           videotitle:'',\n           videocategory: '',\n           crop:  '',\n           channel:  '',\n           videoshortdescription:'',\n           videofulldescription:'',\n           tags:'',\n           togglealert:false,\n           alerttitle:'', alertcontent:'', alerttype:'',\n           ischannelAvailable: false,\n           mychannels:[],\n           isloaded:false,\n           isrightside:'desktop_display',\n           isleftsidebar:'desktop_display',\n       }\n    }\n\n showAlert(e){\n     this.setState({\n         togglealert: e\n     })\n  }\n \n  handleInput(event) {\n       const target = event.target;\n       const value = target.value;\n       const name = target.name;\n       this.setState({\n         [name]: value\n       });\n     }\n\n\n \n\n\n\n\nsubmitEdit =() =>{\n\n const formData = new FormData();\n \n if (this.state.videouploader != null) {\n     if (this.state.videotitle !='') {\n        if (this.state.videoshortdescription !='') {\n           if (this.state.videofulldescription !='') {\n             formData.append(\"videotitle\", this.state.videotitle);\n             formData.append(\"videocategory\", this.state.videocategory);\n             formData.append(\"channel\", this.state.channel);\n             formData.append(\"crop\", this.state.crop);\n             formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n             formData.append(\"videofulldescription\", this.state.videofulldescription);\n             formData.append(\"tags\", this.state.tags);\n             formData.append(\"videouploader\", this.state.videouploader);\n\n              //<img src={Gif} className=\"alertloader\"/>\n             const Mylabel = <p>Please wait...</p>;\n             this.showAlert(true);\n               this.setState({\n                 alerttitle:'Uploading', alertcontent:Mylabel, alerttype:'success'\n              })\n             fetch('/videostreaming/editvideo.php',\n                 {\n                     method: 'POST',                   \n                     body: formData,\n                     headers: {\n                         Accept: 'application/json',\n                       },\n                 }\n             ).then((response) => response.json())\n             .then((responseJSON) => {\n                let status = responseJSON['output'][0]['status'];\n\n                if (status == 'true') {\n                    this.setState({\n                        alerttitle:'Success!', alertcontent:'The video has been edited successfully', alerttype:'success'\n                     })\n                }\n        \n                console.log(responseJSON);\n           \n             setTimeout(() => {\n               this.showAlert(false);\n             }, 4000);\n           \n             }).catch((error) => {\n                console.log(error);  \n             \n             })\n\n           }else{\n             this.showAlert(true);\n             this.setState({\n               alerttitle:'Error', alertcontent: 'Please fill the video full description box', alerttype:'warning'\n             })\n             setTimeout(() => {\n              this.showAlert(false);\n            }, 4000);\n           }\n        }else{\n         this.showAlert(true);\n         this.setState({\n           alerttitle:'Error', alertcontent: 'Please fill the video short description box', alerttype:'warning'\n         })\n         setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n        }\n     }else{\n       this.showAlert(true);\n       this.setState({\n         alerttitle:'Error', alertcontent: 'Please fill the video title box', alerttype:'warning'\n       })\n\n       setTimeout(() => {\n        this.showAlert(false);\n      }, 4000);\n     }\n }else{\n   this.showAlert(true);\n   this.setState({\n     alerttitle:'Error', alertcontent: 'Please login before you can upload video', alerttype:'warning'\n   })\n   setTimeout(() => {\n    this.showAlert(false);\n  }, 4000);\n }\n \n\n\n}\n\n\n\n\ngetChannels(){\n let useremail =  sessionStorage.getItem('userReg');\n   fetch('/videostreaming/mychannels.php', {\n         method: 'POST',\n         headers: {\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n            useremail: useremail\n         })\n     })\n \n     .then((response) => response.json())\n     .then((responseJSON) => {\n         if (responseJSON['output'][0]['success'] == 'true') {\n             this.setState({\n                  ischannelAvailable: true,\n                  mychannels: responseJSON['output'][0]['data']\n             })\n          }\n         // console.log(responseJSON['output']);\n         }).catch((error) =>{\n            // console.log(error);\n         })\n \n}\n setShow = (e) =>{\n   this.setState({\n       showmodal:e\n   })\n }\n\n\n showEdit = (e) =>{\n   this.setState({\n       showedit:e\n   })\n }\n  \n getUserEmail = () =>{\n let useremail =  sessionStorage.getItem('userReg');\n this.setState({\n     videouploader:useremail\n })\n }\n\n componentDidMount(){\n     this.getUserEmail();  \n     this.getChannels();\n     this.getVideo();\n          \n }\n    render() {\n       const {user}  = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle, mychannels} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                  <div className=\"user_wrapper\">\n                    \n                  <div className=\"file_form_wrapper3\">\n                           <div className=\"form_group\">\n                                <label>Video Title [30 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <input type=\"text\"  \n                                       name=\"videotitle\"\n                                       value={this.state.videotitle} \n                                       onChange={this.handleInput.bind(this)}\n                                       maxLength={30}/>\n                           </div>\n                          \n                           <div className=\"form_group form_group2\">\n                                <label>Category</label>\n                                <select name=\"videocategory\"\n                                        value={this.state.videocategory} \n                                        onChange={this.handleInput.bind(this)}>\n                                   <option value=\"nil\">No Category</option>\n                                   <option value=\"Youth in Agribusiness\">Youth in Agribusiness</option>\n                                   <option value=\"Climate change\">Climate change</option>\n                                   <option value=\"Crop production\">Crop production</option>\n                                   <option value=\"Plant health\">Plant health</option>\n                                   <option value=\"Biotechnology\">Biotechnology</option>\n                                </select>\n                           </div>\n\n                           <div className=\"form_group form_group2\">\n                                <label>Crop Type</label>\n                                <select name=\"crop\"\n                                        value={this.state.crop} \n                                        onChange={this.handleInput.bind(this)}>\n                                   <option value=\"nil\">Select Crop Type</option>\n                                   <option value=\"maize\">Maize</option>\n                                   <option value=\"cassava\">Cassava</option>\n                                </select>\n                           </div>\n                          \n                            <div className=\"form_group form_group2\">\n                                <label>Upload To A Channel </label>\n                                <select name=\"channel\"\n                                        value={this.state.channel} \n                                        onChange={this.handleInput.bind(this)}>\n                                          {(this.state.ischannelAvailable == false)?'':\n                                        <option value=\"nil\">No Channel</option>}\n                                        {\n                                        (this.state.ischannelAvailable == false)? \n                                        <option value=\"nil\">No Channel [You have not created any channel]</option>\n                                          :\n                                          \n                                          mychannels.map((channel, i)=>{\n                                            return <option value={channel.id} key={i}>{channel.name}</option>\n                                          })\n                                      }\n                                </select>\n                           </div>\n\n\n                           <div className=\"form_group form_group2\">\n                                <label>Video Short Details [64 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videoshortdescription\"\n                                          value={this.state.videoshortdescription} \n                                          onChange={this.handleInput.bind(this)}\n                                          maxLength={64}></textarea>\n                           </div>\n\n                           <div className=\"form_group \">\n                                <label>Video Full Details<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videofulldescription\"\n                                          value={this.state.videofulldescription} \n                                          onChange={this.handleInput.bind(this)}></textarea>\n                           </div>\n\n                           <div className=\"form_group \">\n                                <label>Video Tags [Separated by comma]</label>\n                                <textarea name=\"tags\"\n                                          value={this.state.tags} \n                                          onChange={this.handleInput.bind(this)}></textarea>\n                           </div>\n\n\n                        \n                           <div className=\"primaryButton form_group upload_video_btn\" onClick={() =>this.submitEdit()}>\n                               <span>Save</span>\n                           </div>\n                          \n                        </div>\n                  </div>\n\n                  <div>\n                    <UploadVideoForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                  </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    getVideo(){\n        let videoid =  localStorage.getItem('editing');\n      \n        fetch('/videostreaming/singlevideo.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                vidid: this.props.match.params.id,\n            })\n        })\n    \n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    thisvideo: responseJSON['output'][0]['data'][0],\n                    videotitle: responseJSON['output'][0]['data'][0].videotitle,\n                    videocategory: responseJSON['output'][0]['data'][0].VideoCategory,\n                    videoshortdescription: responseJSON['output'][0]['data'][0].videodescription,\n                    videofulldescription: responseJSON['output'][0]['data'][0].videofulldescription,\n                    channel: responseJSON['output'][0]['data'][0].videochannel,\n                    crop: responseJSON['output'][0]['data'][0].videocrop,\n                    videotitle: responseJSON['output'][0]['data'][0].videotitle,\n                    videouploader:this.props.match.params.id,\n                    isloaded:true\n                })\n                //console.log(responseJSON['output'][0]['data'][0]);\n            })\n       \n    }\n\n    toggleLeftSidebar(){\n\n      let isrightsidebar = this.state.isrightside;\n      if (isrightsidebar == 'mobile_display') {\n          this.setState({\n              isrightside:'desktop_display'\n          })\n      }\n\n      let isleftsidebar = this.state.isleftsidebar;\n      if (isleftsidebar == 'desktop_display') {\n          this.setState({\n              isleftsidebar:'mobile_display'\n          })\n      }else{\n          this.setState({\n              isleftsidebar:'desktop_display'\n          })\n      }\n  }\n\n}\n       \n\n\nexport default EditVideo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}