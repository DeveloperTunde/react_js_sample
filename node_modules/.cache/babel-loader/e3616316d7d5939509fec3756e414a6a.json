{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/createEvent.js\";\nimport React from 'react';\nimport { Calendar, Views, dateFnsLocalizer } from 'react-big-calendar';\nimport events from './events';\nimport ExampleControlSlot from './ControlSlot';\nimport _ from 'lodash';\nimport { format } from \"date-fns\";\nimport moment from 'moment';\nimport 'moment/locale/nb';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport enUS from 'date-fns/locale/en-US';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {};\n\nclass CreateEventWithNoOverlap extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSelect = _ref => {\n      let {\n        start,\n        end\n      } = _ref;\n      const title = window.prompt('New Event name');\n      if (title) ;\n      let mee = [start, end];\n      let fi = mee[1];\n      console.log(fi);\n      this.setState({\n        events: [...this.state.events, {\n          start,\n          end,\n          title\n        }]\n      });\n    };\n\n    this.state = {\n      events: _.cloneDeep(events),\n      dayLayoutAlgorithm: 'no-overlap'\n    };\n  }\n\n  render() {\n    const locales = {\n      'en-US': enUS\n    };\n    const localizer = dateFnsLocalizer({\n      format,\n      parse,\n      startOfWeek,\n      getDay,\n      locales\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '60%',\n        marginLeft: '20%',\n        marginTop: '5vh',\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ExampleControlSlot.Entry, {\n        waitForOutlet: true,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Click an event to see more info, or drag the mouse over the calendar to select a date/time range.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), \"The events are being arranged by `no-overlap` algorithm.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: Views.WEEK,\n        scrollToTime: new Date(2022, 1, 8, 6),\n        defaultDate: new Date(2022, 0, 12) //defaultDate={moment().toDate()}\n        ,\n        onSelectEvent: event => alert(event.title),\n        onSelectSlot: this.handleSelect,\n        dayLayoutAlgorithm: this.state.dayLayoutAlgorithm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreateEventWithNoOverlap.propTypes = propTypes;\nexport default CreateEventWithNoOverlap;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/createEvent.js"],"names":["React","Calendar","Views","dateFnsLocalizer","events","ExampleControlSlot","_","format","moment","parse","startOfWeek","getDay","enUS","propTypes","CreateEventWithNoOverlap","Component","constructor","handleSelect","start","end","title","window","prompt","mee","fi","console","log","setState","state","cloneDeep","dayLayoutAlgorithm","render","locales","localizer","width","marginLeft","marginTop","height","WEEK","Date","event","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Calendar, Views, dateFnsLocalizer } from 'react-big-calendar'\nimport events from './events'\nimport ExampleControlSlot from './ControlSlot'\nimport _ from 'lodash'\nimport { format } from \"date-fns\";\nimport moment from 'moment'\nimport 'moment/locale/nb';\n\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\n\n\nconst propTypes = {}\n\nclass CreateEventWithNoOverlap extends React.Component {\n  constructor(...args) {\n    super(...args)\n\n    this.state = {\n      events: _.cloneDeep(events),\n      dayLayoutAlgorithm: 'no-overlap',\n    }\n  }\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    if (title);\n    let mee = [start, end];\n    let fi = mee[1];\n    console.log(fi);\n      this.setState({\n        events: [\n          ...this.state.events,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n      })\n  }\n\n  render() {\n  \n    const locales = {\n        'en-US': enUS,\n      }\n      \n      const localizer = dateFnsLocalizer({\n        format,\n        parse,\n        startOfWeek,\n        getDay,\n        locales,\n      })\n    return (\n      <div style={{width:'60%', marginLeft:'20%', marginTop:'5vh', height:'90vh'}}>\n        <ExampleControlSlot.Entry waitForOutlet>\n          <strong>\n            Click an event to see more info, or drag the mouse over the calendar\n            to select a date/time range.\n            <br />\n            The events are being arranged by `no-overlap` algorithm.\n          </strong>\n        </ExampleControlSlot.Entry>\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={Views.WEEK}\n          scrollToTime={new Date(2022, 1, 8, 6)}\n          defaultDate={new Date(2022, 0, 12)}\n          //defaultDate={moment().toDate()}\n          onSelectEvent={event => alert(event.title)}\n          onSelectSlot={this.handleSelect}\n          dayLayoutAlgorithm={this.state.dayLayoutAlgorithm}\n        />\n      </div>\n    )\n  }\n}\n\nCreateEventWithNoOverlap.propTypes = propTypes\n\nexport default CreateEventWithNoOverlap\n\n"]},"metadata":{},"sourceType":"module"}