{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/createEvent.js\";\nimport React from 'react';\nimport { Calendar, Views, dateFnsLocalizer } from 'react-big-calendar';\nimport events from './events';\nimport ExampleControlSlot from './ControlSlot';\nimport _ from 'lodash';\nimport { format } from \"date-fns\";\nimport moment from 'moment';\nimport 'moment/locale/nb';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport enUS from 'date-fns/locale/en-US';\nimport SchedularForm from './SchedularForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {};\n\nclass CreateEventWithNoOverlap extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSelect = _ref => {\n      let {\n        start,\n        end\n      } = _ref;\n      const title = window.prompt('New Event name');\n      if (title) ;\n      this.setState({\n        events: [...this.state.events, {\n          start,\n          end,\n          title\n        }],\n        starttimefull: start,\n        endtimefull: end,\n        titleful: title\n      });\n    };\n\n    this.state = {\n      events: _.cloneDeep(events),\n      dayLayoutAlgorithm: 'no-overlap',\n      starttimefull: '',\n      endtimefull: '',\n      titleful: '',\n      showform: false\n    };\n  }\n\n  displayForm() {\n    this.setState({\n      showform: true\n    });\n  }\n\n  render() {\n    const locales = {\n      'en-US': enUS\n    };\n    const localizer = dateFnsLocalizer({\n      format,\n      parse,\n      startOfWeek,\n      getDay,\n      locales\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ExampleControlSlot.Entry, {\n        waitForOutlet: true,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Click an event to see more info, or drag the mouse over the calendar to select a date/time range.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), \"The events are being arranged by `no-overlap` algorithm.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        selectable: true,\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: Views.WEEK,\n        scrollToTime: new Date(2022, 1, 8, 6),\n        defaultDate: new Date(2022, 0, 12) //defaultDate={moment().toDate()}\n        ,\n        onSelectEvent: event => alert(event.title),\n        onSelectSlot: this.handleSelect,\n        dayLayoutAlgorithm: this.state.dayLayoutAlgorithm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitvideobtn\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayForm(),\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this), this.state.showform ? /*#__PURE__*/_jsxDEV(SchedularForm, {\n        presentTabprop: this.state.presentTab,\n        selecteddayprop: selectedday,\n        starttimeprop: format(this.state.starttimefull, \"HH:mm\"),\n        endtimeprop: format(this.state.endtimefull, \"HH:mm\"),\n        starttimefull: this.state.starttimefull,\n        endtimefull: this.state.endtimefull,\n        selectedvideo: this.state.submittingvideoid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreateEventWithNoOverlap.propTypes = propTypes;\nexport default CreateEventWithNoOverlap;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/createEvent.js"],"names":["React","Calendar","Views","dateFnsLocalizer","events","ExampleControlSlot","_","format","moment","parse","startOfWeek","getDay","enUS","SchedularForm","propTypes","CreateEventWithNoOverlap","Component","constructor","handleSelect","start","end","title","window","prompt","setState","state","starttimefull","endtimefull","titleful","cloneDeep","dayLayoutAlgorithm","showform","displayForm","render","locales","localizer","height","WEEK","Date","event","alert","presentTab","selectedday","submittingvideoid"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Calendar, Views, dateFnsLocalizer } from 'react-big-calendar'\nimport events from './events'\nimport ExampleControlSlot from './ControlSlot'\nimport _ from 'lodash'\nimport { format } from \"date-fns\";\nimport moment from 'moment'\nimport 'moment/locale/nb';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\nimport SchedularForm from './SchedularForm';\n\n\nconst propTypes = {}\n\nclass CreateEventWithNoOverlap extends React.Component {\n  constructor(...args) {\n    super(...args)\n\n    this.state = {\n      events: _.cloneDeep(events),\n      dayLayoutAlgorithm: 'no-overlap',\n      starttimefull:'',\n      endtimefull:'',\n      titleful:'',\n      showform:false,\n    }\n  }\n\n  displayForm() {\n    this.setState({\n        showform:true\n    })\n\n}\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt('New Event name')\n    if (title);\n   \n      this.setState({\n        events: [\n          ...this.state.events,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n        starttimefull: start,\n        endtimefull: end,\n        titleful:title\n      })\n  }\n\n  render() {\n  \n    const locales = {\n        'en-US': enUS,\n      }\n      \n      const localizer = dateFnsLocalizer({\n        format,\n        parse,\n        startOfWeek,\n        getDay,\n        locales,\n      })\n    return (\n      <div style={{height:'90vh'}}>\n        <ExampleControlSlot.Entry waitForOutlet>\n          <strong>\n            Click an event to see more info, or drag the mouse over the calendar\n            to select a date/time range.\n            <br />\n            The events are being arranged by `no-overlap` algorithm.\n          </strong>\n        </ExampleControlSlot.Entry>\n        <Calendar\n          selectable\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={Views.WEEK}\n          scrollToTime={new Date(2022, 1, 8, 6)}\n          defaultDate={new Date(2022, 0, 12)}\n          //defaultDate={moment().toDate()}\n          onSelectEvent={event => alert(event.title)}\n          onSelectSlot={this.handleSelect}\n          dayLayoutAlgorithm={this.state.dayLayoutAlgorithm}\n        />\n\n                   <div className=\"submitvideobtn\">\n                        <span onClick={() => this.displayForm()}> Submit</span>\n                    </div>\n\n                     {(this.state.showform) ? \n                        <SchedularForm \n                           presentTabprop={this.state.presentTab} \n                           selecteddayprop={selectedday} \n                           starttimeprop={format(this.state.starttimefull, \"HH:mm\")} \n                           endtimeprop={format(this.state.endtimefull, \"HH:mm\")}\n                           starttimefull={this.state.starttimefull} \n                           endtimefull={this.state.endtimefull}\n                           selectedvideo ={this.state.submittingvideoid}\n                           />\n                     :\n                    \n                    <div></div>}\n      </div>\n    )\n  }\n}\n\nCreateEventWithNoOverlap.propTypes = propTypes\n\nexport default CreateEventWithNoOverlap\n\n"]},"metadata":{},"sourceType":"module"}