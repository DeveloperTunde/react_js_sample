{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/videos/Channels.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaPlus } from 'react-icons/fa';\nimport CreateChannelForm from '../components/CreateChannelForm';\nimport AlertComponent from '../reuseables/Alert';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserIndex extends Component {\n  constructor() {\n    super();\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.openChannel = () => {\n      if (sessionStorage.getItem('userReg') != null) {\n        this.setShow(true);\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Not Logged in!',\n          alertcontent: 'You have to login before you can create a channel',\n          alerttype: 'warning'\n        });\n      }\n    };\n\n    this.channelSubscription = e => {\n      let useremail = sessionStorage.getItem('userReg');\n\n      if (useremail != null) {\n        fetch('/channelsubscription.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n          })\n        }).then(response => response.json()).then(responseJSON => {\n          let response = responseJSON['output'][0]['data'];\n          this.showAlert(true);\n\n          if (response == 'success') {// this.setState({\n            //    alerttitle:'Success!', alertcontent:'Yo', alerttype:'success'\n            // })\n          } else if (response == 'failed') {\n            this.setState({\n              alerttitle: 'Failed!',\n              alertcontent: 'Unable to process your request at the moment. Try again later',\n              alerttype: 'warning'\n            });\n          } else {\n            this.setState({\n              alerttitle: 'Failed!',\n              alertcontent: 'Sorry. An error occur while trying to process the request',\n              alerttype: 'warning'\n            });\n          }\n\n          setTimeout(() => {\n            window.location.reload();\n          }, 2000);\n          console.log(responseJSON);\n        });\n      } else {\n        this.setState({\n          showdialog: true\n        });\n      }\n    };\n\n    this.channelUnsubscription = e => {\n      let useremail = sessionStorage.getItem('userReg');\n      fetch('/videostreaming/channelunsubscription.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          channelid: e\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        let response = responseJSON['output'][0]['data'];\n\n        if (response == 'success') {\n          this.setState({\n            alerttitle: 'Success!',\n            alertcontent: 'You have successfully unsuscribed from the channel',\n            alerttype: 'success'\n          });\n        }\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n        console.log(responseJSON);\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showmodal2: false,\n      isLoggedin: false,\n      useremail: '',\n      myvideos: [],\n      allchannel: [],\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display',\n      showdialog: false\n    };\n  }\n\n  confirmDialog() {\n    window.location = '/login';\n  }\n\n  onCancelDialog() {\n    this.setState({\n      showdialog: false\n    });\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  componentDidMount() {\n    this.getAllChannel();\n  }\n\n  render() {\n    const {\n      allchannel\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channels_top2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Channels \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"primaryButton\",\n                onClick: () => this.openChannel(true),\n                children: [\" \", /*#__PURE__*/_jsxDEV(FaPlus, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 89\n                }, this), \" Create Channel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.state.showdialog ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n                info: true,\n                showCancel: true,\n                cancelBtnText: \"No\",\n                confirmBtnText: \"Yes, login\",\n                confirmBtnBsStyle: \"success\",\n                title: \"Would you like to login ?\",\n                onConfirm: () => this.confirmDialog(),\n                onCancel: () => this.onCancelDialog(),\n                focusCancelBtn: true,\n                children: \"You have to login before you can subscribe to this channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 18\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channels_bottom\",\n              children: allchannel.map((channel, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"channel_box\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/channel_video/${channel.id}`,\n                    className: \"link\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"channel_box_all channel_box_a\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: channel.logo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 81\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_b\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/channel_video/${channel.id}`,\n                      className: \"link\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: channel.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_c\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [channel.subscribers, \" Subscriber \", channel.subscribers > 1 ? 's' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this), channel.substatus == 'yes' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_d\",\n                    onClick: () => this.channelUnsubscription(channel.id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton\",\n                      children: \"Unsubscribe \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 24\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_d\",\n                    onClick: () => this.channelSubscription(channel.id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton\",\n                      children: \"Subscribe \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 24\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CreateChannelForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  getAllChannel() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/allchannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] = true) {\n        this.setState({\n          allchannel: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON['output']);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default UserIndex;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/videos/Channels.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaPlus","CreateChannelForm","AlertComponent","SweetAlert","UserIndex","constructor","setShow","e","setState","showmodal","openChannel","sessionStorage","getItem","showAlert","alerttitle","alertcontent","alerttype","channelSubscription","useremail","fetch","method","headers","body","JSON","stringify","channelid","then","response","json","responseJSON","setTimeout","window","location","reload","console","log","showdialog","channelUnsubscription","state","showmodal2","isLoggedin","myvideos","allchannel","togglealert","isrightside","isleftsidebar","confirmDialog","onCancelDialog","componentDidMount","getAllChannel","render","toggleLeftSidebar","map","channel","i","id","logo","name","subscribers","substatus","setShow2","catch","error","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaPlus } from 'react-icons/fa';\nimport CreateChannelForm from '../components/CreateChannelForm'\nimport AlertComponent from '../reuseables/Alert'\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass UserIndex extends Component {\n   \n   constructor(){\n      super();\n      this.state={\n          showmodal: false,\n          showmodal2: false,\n          isLoggedin: false,\n          useremail: '',\n          myvideos:[],\n          allchannel:[],\n          togglealert:false,\n          alerttitle:'', alertcontent:'', alerttype:'',\n          isrightside:'desktop_display',\n          isleftsidebar:'desktop_display',\n          showdialog:false,\n      }\n   }\n\nconfirmDialog(){\n  window.location='/login'\n}\nonCancelDialog(){\n   this.setState({showdialog:false})\n}\n\nsetShow = (e) =>{\n  this.setState({\n      showmodal:e\n  })\n}\n\nshowAlert(e){\n   this.setState({\n       togglealert: e\n   })\n}\n\nopenChannel = () => {\n    if (sessionStorage.getItem('userReg') != null) {\n        this.setShow(true)\n    }else{\n        this.showAlert(true);\n        this.setState({\n            alerttitle:'Not Logged in!', alertcontent:'You have to login before you can create a channel', alerttype:'warning'\n         })\n    }\n   \n}\n\n\ncomponentDidMount(){\n   this.getAllChannel();\n}\n    render() {\n       const {allchannel} = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                 \n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n             <div className=\"user_wrapper\">\n                   \n             <div className=\"channels_top2\">\n                \n                <span>Channels </span>\n                <span className=\"primaryButton\" onClick={() => this.openChannel(true)}> <FaPlus className=\"icon\" /> Create Channel</span>\n               \n             </div>\n             \n             <div>\n                {(this.state.showdialog)?\n                 <SweetAlert\n                 info\n                 showCancel\n                 cancelBtnText=\"No\"\n                 confirmBtnText=\"Yes, login\"\n                 confirmBtnBsStyle=\"success\"\n                 title=\"Would you like to login ?\"\n                 onConfirm={() =>this.confirmDialog()}\n                 onCancel={() =>this.onCancelDialog()}\n                 focusCancelBtn\n               >\n                   You have to login before you can subscribe to this channel\n               </SweetAlert> :''}\n             </div>\n\n             <div className=\"channels_bottom\">\n\n            {\n               allchannel.map((channel, i) =>{\n                 return <div className=\"channel_box\" key={i}>\n                    <Link  to={`/channel_video/${channel.id}`} className=\"link\"><div className=\"channel_box_all channel_box_a\">\n                      <img src={channel.logo} />\n                    </div></Link>\n                    <div className=\"channel_box_all channel_box_b\">\n                    <Link  to={`/channel_video/${channel.id}`} className=\"link\"><span>{channel.name}</span></Link>\n                    </div>\n                    <div className=\"channel_box_all channel_box_c\">\n                       <span>{channel.subscribers} Subscriber {(channel.subscribers> 1)?'s':''}</span>\n                    </div>\n                    {\n                       (channel.substatus =='yes')? \n                       <div className=\"channel_box_all channel_box_d\" onClick={() => this.channelUnsubscription(channel.id)}>\n                          <span className=\"primaryButton\">Unsubscribe </span>\n                       </div>\n                       :\n                       <div className=\"channel_box_all channel_box_d\" onClick={() => this.channelSubscription(channel.id)}>\n                          <span className=\"primaryButton\">Subscribe </span>\n                       </div>\n                    }\n                    \n                </div>\n                \n               })\n            }\n                \n              \n                \n             </div>\n                  </div>\n         \n                <div>\n                <CreateChannelForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)\n                    \n                    }\n\n                     />\n                </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    getAllChannel(){\n      let useremail = sessionStorage.getItem('userReg');\n      fetch('/videostreaming/allchannels.php', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            useremail: useremail,\n        })\n      })\n  \n          .then((response) => response.json())\n          .then((responseJSON) => {\n              if (responseJSON['output'][0]['success'] = true) {\n                  this.setState({\n                      allchannel: responseJSON['output'][0]['data']\n                  })\n              }\n          // console.log(responseJSON['output']);\n          }).catch((error) =>{\n             // console.log(error);\n          })\n  }\n\n  channelSubscription = (e) => {\n   let useremail = sessionStorage.getItem('userReg');\n   \n   if (useremail != null) {\n   \n    fetch('/channelsubscription.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n        })\n    })\n        .then((response) => response.json())\n        .then((responseJSON) => {\n         let response = responseJSON['output'][0]['data'];\n         this.showAlert(true);\n         if (response == 'success') {\n            // this.setState({\n            //    alerttitle:'Success!', alertcontent:'Yo', alerttype:'success'\n            // })\n         }else if(response == 'failed'){\n            this.setState({\n               alerttitle:'Failed!', alertcontent:'Unable to process your request at the moment. Try again later', alerttype:'warning'\n            })\n         }else{\n            this.setState({\n               alerttitle:'Failed!', alertcontent:'Sorry. An error occur while trying to process the request', alerttype:'warning'\n            })\n         }\n\n       setTimeout(() => {\n         window.location.reload();\n       }, 2000);\n\n       \n          console.log(responseJSON);\n        })\n  }else{\n     this.setState({showdialog:true})\n    }\n}\n\n\nchannelUnsubscription = (e) => {\n   let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/channelunsubscription.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n        })\n    })\n\n        .then((response) => response.json())\n        .then((responseJSON) => {\n         let response = responseJSON['output'][0]['data'];\n         if (response == 'success') {\n            this.setState({\n               alerttitle:'Success!', alertcontent:'You have successfully unsuscribed from the channel', alerttype:'success'\n            })\n         }\n\n       setTimeout(() => {\n         window.location.reload();\n       }, 2000);\n\n       \n          console.log(responseJSON);\n        })\n}\n\ntoggleLeftSidebar(){\n\n   let isrightsidebar = this.state.isrightside;\n   if (isrightsidebar == 'mobile_display') {\n       this.setState({\n           isrightside:'desktop_display'\n       })\n   }\n\n   let isleftsidebar = this.state.isleftsidebar;\n   if (isleftsidebar == 'desktop_display') {\n       this.setState({\n           isleftsidebar:'mobile_display'\n       })\n   }else{\n       this.setState({\n           isleftsidebar:'desktop_display'\n       })\n   }\n}\n\n}\n\nexport default UserIndex;\n"]},"metadata":{},"sourceType":"module"}