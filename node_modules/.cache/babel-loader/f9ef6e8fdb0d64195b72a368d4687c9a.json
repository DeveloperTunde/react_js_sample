{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/dashboard/components/UploadVideoForm.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../../assets/css/videos.css';\nimport '../../assets/css/styles.css';\nimport '../../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt } from 'react-icons/fa';\nimport Modal from 'react-bootstrap/Modal';\nimport Upload from '../../assets/images/upload.png';\nimport AlertComponent from '../../reuseables/Alert';\nimport Gif from '../../assets/images/mygif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadVideoForm extends Component {\n  constructor() {\n    super();\n\n    this.submitForm = () => {\n      const formData = new FormData();\n\n      if (this.state.videouploader != null) {\n        if (this.state.videotitle != '') {\n          if (this.state.videoshortdescription != '') {\n            if (this.state.videofulldescription != '') {\n              formData.append(\"videofile\", this.state.uploadFile);\n              formData.append(\"videotitle\", this.state.videotitle);\n              formData.append(\"videocategory\", this.state.videocategory);\n              formData.append(\"channel\", this.state.channel);\n              formData.append(\"crop\", this.state.crop);\n              formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n              formData.append(\"videofulldescription\", this.state.videofulldescription);\n              formData.append(\"tags\", this.state.tags);\n              formData.append(\"videouploader\", this.state.videouploader); //<img src={Gif} className=\"alertloader\"/>\n\n              const Mylabel = /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please wait...  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 31\n              }, this);\n\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Uploading',\n                alertcontent: Mylabel,\n                alerttype: 'success'\n              });\n              fetch('/videostreaming/upload.php', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  Accept: 'application/json'\n                }\n              }).then(response => response.json()).then(responseJSON => {\n                this.setState({\n                  alerttitle: 'Success!',\n                  alertcontent: `${responseJSON}`,\n                  alerttype: 'success'\n                });\n                console.log(responseJSON);\n                this.props.closeModal2();\n                setTimeout(() => {\n                  this.showAlert(false);\n                }, 4000);\n              }).catch(error => {\n                console.log(error);\n              });\n            } else {\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Error',\n                alertcontent: 'Please fill the video full description box',\n                alerttype: 'warning'\n              });\n              setTimeout(() => {\n                this.showAlert(false);\n              }, 4000);\n            }\n          } else {\n            this.showAlert(true);\n            this.setState({\n              alerttitle: 'Error',\n              alertcontent: 'Please fill the video short description box',\n              alerttype: 'warning'\n            });\n            setTimeout(() => {\n              this.showAlert(false);\n            }, 4000);\n          }\n        } else {\n          this.showAlert(true);\n          this.setState({\n            alerttitle: 'Error',\n            alertcontent: 'Please fill the video title box',\n            alerttype: 'warning'\n          });\n          setTimeout(() => {\n            this.showAlert(false);\n          }, 4000);\n        }\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Error',\n          alertcontent: 'Please login before you can upload video',\n          alerttype: 'warning'\n        });\n        setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n      }\n    };\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.getUserEmail = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        videouploader: useremail\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      uploadFile: '',\n      videouploader: null,\n      videotitle: '',\n      videocategory: '',\n      crop: '',\n      channel: '',\n      videoshortdescription: '',\n      videofulldescription: '',\n      tags: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      ischannelAvailable: false,\n      mychannels: []\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async setUploadFile(e) {\n    this.setState({\n      uploadFile: e[0]\n    });\n    let file = e[0];\n    let filesize = file.size; //console.log(filesize);\n\n    this.props.opensecondModal();\n  }\n\n  getChannels() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/mychannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] == 'true') {\n        this.setState({\n          ischannelAvailable: true,\n          mychannels: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON['output']);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUserEmail();\n    this.getChannels();\n  }\n\n  render() {\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle,\n      mychannels\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadalert\",\n        children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n          title: alerttitle,\n          showalert: togglealert,\n          content: alertcontent,\n          type: alerttype,\n          closealert: () => this.showAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.openModal,\n        onHide: this.props.closeModal,\n        dialogClassName: \"modal-100w\",\n        size: \"xl\",\n        \"aria-labelledby\": \"file-form\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"file-form\",\n            children: \"Upload Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file_form_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_a\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Upload\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"video/*\",\n              hidden: true,\n              ref: input => this.inputElement = input,\n              onChange: e => this.setUploadFile(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_b\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Click here to select file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_c\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"primaryButton\",\n                onClick: () => this.inputElement.click(),\n                children: \"Select File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.openModal2,\n        onHide: this.props.closeModal2,\n        dialogClassName: \"modal-100w\",\n        size: \"xl\",\n        \"aria-labelledby\": \"file-form2\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"file-form2\",\n            children: \"Upload Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file_form_wrapper2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Video Title [30 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"videotitle\",\n                value: this.state.videotitle,\n                onChange: this.handleInput.bind(this),\n                maxLength: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group form_group2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"videocategory\",\n                value: this.state.videocategory,\n                onChange: this.handleInput.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"nil\",\n                  children: \"No Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Youth in Agribusiness\",\n                  children: \"Youth in Agribusiness\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Climate change\",\n                  children: \"Climate change\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Crop production\",\n                  children: \"Crop production\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Plant health\",\n                  children: \"Plant health\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Biotechnology\",\n                  children: \"Biotechnology\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group form_group2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Crop Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"crop\",\n                value: this.state.crop,\n                onChange: this.handleInput.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"nil\",\n                  children: \"Select Crop Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"maize\",\n                  children: \"Maize\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cassava\",\n                  children: \"Cassava\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group form_group2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload To A Channel \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"channel\",\n                value: this.state.channel,\n                onChange: this.handleInput.bind(this),\n                children: [this.state.ischannelAvailable == false ? '' : /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"nil\",\n                  children: \"No Channel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this), this.state.ischannelAvailable == false ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"nil\",\n                  children: \"No Channel [You have not created any channel]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 41\n                }, this) : mychannels.map((channel, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: channel.id,\n                    children: channel.name\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 52\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group form_group2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Video Short Details [64 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 79\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"videoshortdescription\",\n                value: this.state.videoshortdescription,\n                onChange: this.handleInput.bind(this),\n                maxLength: 64\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group \",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Video Full Details\", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"videofulldescription\",\n                value: this.state.videofulldescription,\n                onChange: this.handleInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group \",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Video Tags [Separated by comma]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"tags\",\n                value: this.state.tags,\n                onChange: this.handleInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected_video\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Selected video:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: this.state.uploadFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primaryButton form_group upload_video_btn\",\n              onClick: () => this.submitForm(),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default UploadVideoForm;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/dashboard/components/UploadVideoForm.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","FaEye","FaSquare","FaShareAlt","Modal","Upload","AlertComponent","Gif","UploadVideoForm","constructor","submitForm","formData","FormData","state","videouploader","videotitle","videoshortdescription","videofulldescription","append","uploadFile","videocategory","channel","crop","tags","Mylabel","showAlert","setState","alerttitle","alertcontent","alerttype","fetch","method","body","headers","Accept","then","response","json","responseJSON","console","log","props","closeModal2","setTimeout","catch","error","setShow","e","showmodal","getUserEmail","useremail","sessionStorage","getItem","togglealert","ischannelAvailable","mychannels","handleInput","event","target","value","name","setUploadFile","file","filesize","size","opensecondModal","getChannels","JSON","stringify","componentDidMount","render","openModal","closeModal","input","inputElement","files","click","openModal2","color","bind","map","i","id"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../../assets/css/videos.css'\nimport '../../assets/css/styles.css'\nimport '../../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt } from 'react-icons/fa'\nimport Modal from 'react-bootstrap/Modal'\nimport Upload from '../../assets/images/upload.png'\nimport AlertComponent from '../../reuseables/Alert'\nimport Gif from '../../assets/images/mygif.gif'\n\n\nclass UploadVideoForm extends Component {\n     constructor(){\n        super();\n        this.state={\n            showmodal: false,\n            uploadFile:'',\n            videouploader: null,\n            videotitle:'',\n            videocategory: '',\n            crop:  '',\n            channel:  '',\n            videoshortdescription: '',\n            videofulldescription:'',\n            tags:'',\n            togglealert:false,\n            alerttitle:'', alertcontent:'', alerttype:'',\n            ischannelAvailable: false,\n            mychannels:[],\n           \n\n        }\n     }\n\n  showAlert(e){\n      this.setState({\n          togglealert: e\n      })\n   }\n  \n   handleInput(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n          [name]: value\n        });\n      }\n\n  async setUploadFile(e){\n    this.setState({\n      uploadFile:e[0]\n    })\n    let file = e[0];\n    let filesize = file.size;\n\n\n    //console.log(filesize);\n    this.props.opensecondModal();\n  \n  }\n  \n\n\n\n\nsubmitForm =() =>{\n\n  const formData = new FormData();\n  \n  if (this.state.videouploader != null) {\n      if (this.state.videotitle !='') {\n         if (this.state.videoshortdescription !='') {\n            if (this.state.videofulldescription !='') {\n              \n              formData.append(\"videofile\", this.state.uploadFile);\n              formData.append(\"videotitle\", this.state.videotitle);\n              formData.append(\"videocategory\", this.state.videocategory);\n              formData.append(\"channel\", this.state.channel);\n              formData.append(\"crop\", this.state.crop);\n              formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n              formData.append(\"videofulldescription\", this.state.videofulldescription);\n              formData.append(\"tags\", this.state.tags);\n              formData.append(\"videouploader\", this.state.videouploader);\n\n              //<img src={Gif} className=\"alertloader\"/>\n              const Mylabel = <p>Please wait...  </p>;\n              this.showAlert(true);\n                this.setState({\n                  alerttitle:'Uploading', alertcontent:Mylabel, alerttype:'success'\n               })\n              fetch('/videostreaming/upload.php',\n                  {\n                      method: 'POST',                   \n                      body: formData,\n                      headers: {\n                          Accept: 'application/json',\n                        },\n                  }\n              ).then((response) => response.json())\n              .then((responseJSON) => {\n              \n                this.setState({\n                  alerttitle:'Success!', alertcontent:`${responseJSON}`, alerttype:'success'\n               })\n              console.log(responseJSON);\n              this.props.closeModal2();\n            \n              setTimeout(() => {\n                this.showAlert(false);\n              }, 4000);\n            \n              }).catch((error) => {\n                 console.log(error);  \n              \n              })\n\n            }else{\n              this.showAlert(true);\n              this.setState({\n                alerttitle:'Error', alertcontent: 'Please fill the video full description box', alerttype:'warning'\n              })\n              setTimeout(() => {\n                this.showAlert(false);\n              }, 4000);\n            }\n         }else{\n          this.showAlert(true);\n          this.setState({\n            alerttitle:'Error', alertcontent: 'Please fill the video short description box', alerttype:'warning'\n          })\n\n          setTimeout(() => {\n            this.showAlert(false);\n          }, 4000);\n         }\n      }else{\n        this.showAlert(true);\n        this.setState({\n          alerttitle:'Error', alertcontent: 'Please fill the video title box', alerttype:'warning'\n        })\n\n        setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n      }\n  }else{\n    this.showAlert(true);\n    this.setState({\n      alerttitle:'Error', alertcontent: 'Please login before you can upload video', alerttype:'warning'\n    })\n\n    setTimeout(() => {\n      this.showAlert(false);\n    }, 4000);\n  }\n  \n  \n \n}\n\n\n\n\ngetChannels(){\n  let useremail =  sessionStorage.getItem('userReg');\n    fetch('/videostreaming/mychannels.php', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n             useremail: useremail\n          })\n      })\n  \n      .then((response) => response.json())\n      .then((responseJSON) => {\n          if (responseJSON['output'][0]['success'] == 'true') {\n              this.setState({\n                   ischannelAvailable: true,\n                   mychannels: responseJSON['output'][0]['data']\n              })\n           }\n          // console.log(responseJSON['output']);\n          }).catch((error) =>{\n             // console.log(error);\n          })\n  \n}\n  setShow = (e) =>{\n    this.setState({\n        showmodal:e\n    })\n  }\n   \n  getUserEmail = () =>{\n  let useremail =  sessionStorage.getItem('userReg');\n  this.setState({\n      videouploader:useremail\n  })\n  }\n\n  componentDidMount(){\n      this.getUserEmail();\n      this.getChannels();\n  }\n\n\n\n    render() {     \n      const {togglealert, alertcontent, alerttype, alerttitle, mychannels} = this.state;  \n      \n        return (\n              <div className=\"content\">  \n                     {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                 <Modal\n                     show={this.props.openModal}\n                     onHide={this.props.closeModal}\n                     dialogClassName=\"modal-100w\"\n                     size=\"xl\"\n                     aria-labelledby=\"file-form\"\n                     centered\n                   >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"file-form\" >\n                           Upload Video\n                        </Modal.Title>\n                    </Modal.Header>\n                     <Modal.Body>\n                   \n                        <div className=\"file_form_wrapper\">\n                           <div className='file_a'>\n                               <img src={Upload} />\n                           </div>\n                           <input type=\"file\" accept=\"video/*\"\n                                  hidden={true}\n                                  ref={input => this.inputElement = input}\n                                  onChange={(e) => this.setUploadFile(e.target.files)} \n                                  />\n                           <div className='file_b' >\n                               <span>Click here to select file</span>\n                           </div>\n                           <div className='file_c'>\n                               <span className=\"primaryButton\" onClick={() => this.inputElement.click()}>Select File</span>\n                           </div>\n                        </div>\n                    </Modal.Body>\n                 </Modal>\n\n\n\n\n\n\n\n\n                 <Modal\n                     show={this.props.openModal2}\n                     onHide={this.props.closeModal2}\n                     dialogClassName=\"modal-100w\"\n                     size=\"xl\"\n                     aria-labelledby=\"file-form2\"\n                     centered\n                   >\n                     \n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"file-form2\">\n                        Upload Video \n                     </Modal.Title>\n                    </Modal.Header>\n                     <Modal.Body>\n                       \n                        <div className=\"file_form_wrapper2\">\n                           <div className=\"form_group\">\n                                <label>Video Title [30 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <input type=\"text\"  \n                                       name=\"videotitle\"\n                                       value={this.state.videotitle} \n                                       onChange={this.handleInput.bind(this)}\n                                       maxLength={30}/>\n                           </div>\n                          \n                           <div className=\"form_group form_group2\">\n                                <label>Category</label>\n                                <select name=\"videocategory\"\n                                        value={this.state.videocategory} \n                                        onChange={this.handleInput.bind(this)}>\n                                   <option value=\"nil\">No Category</option>\n                                   <option value=\"Youth in Agribusiness\">Youth in Agribusiness</option>\n                                   <option value=\"Climate change\">Climate change</option>\n                                   <option value=\"Crop production\">Crop production</option>\n                                   <option value=\"Plant health\">Plant health</option>\n                                   <option value=\"Biotechnology\">Biotechnology</option>\n                                \n                                </select>\n                           </div>\n\n\n\n                  \n\n\n\n                           <div className=\"form_group form_group2\">\n                                <label>Crop Type</label>\n                                <select name=\"crop\"\n                                        value={this.state.crop} \n                                        onChange={this.handleInput.bind(this)}>\n                                   <option value=\"nil\">Select Crop Type</option>\n                                   <option value=\"maize\">Maize</option>\n                                   <option value=\"cassava\">Cassava</option>\n                                </select>\n                           </div>\n                          \n                            <div className=\"form_group form_group2\">\n                                <label>Upload To A Channel </label>\n                                <select name=\"channel\"\n                                        value={this.state.channel} \n                                        onChange={this.handleInput.bind(this)}>\n                                          {(this.state.ischannelAvailable == false)?'':\n                                        <option value=\"nil\">No Channel</option>}\n                                        {\n                                        (this.state.ischannelAvailable == false)? \n                                        <option value=\"nil\">No Channel [You have not created any channel]</option>\n                                          :\n                                          \n                                          mychannels.map((channel, i)=>{\n                                            return <option value={channel.id} key={i}>{channel.name}</option>\n                                          })\n                                      }\n                                </select>\n                           </div>\n\n\n                           <div className=\"form_group form_group2\">\n                                <label>Video Short Details [64 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videoshortdescription\"\n                                          value={this.state.videoshortdescription} \n                                          onChange={this.handleInput.bind(this)}\n                                          maxLength={64}></textarea>\n                           </div>\n\n                           <div className=\"form_group \">\n                                <label>Video Full Details<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videofulldescription\"\n                                          value={this.state.videofulldescription} \n                                          onChange={this.handleInput.bind(this)}></textarea>\n                           </div>\n\n                           <div className=\"form_group \">\n                                <label>Video Tags [Separated by comma]</label>\n                                <textarea name=\"tags\"\n                                          value={this.state.tags} \n                                          onChange={this.handleInput.bind(this)}></textarea>\n                           </div>\n\n\n                           <div className=\"selected_video\">\n                                <span>Selected video:</span>\n                                <span>{this.state.uploadFile.name}</span>\n                           </div>\n\n                           <div className=\"primaryButton form_group upload_video_btn\" onClick={() =>this.submitForm()}>\n                               <span>Done</span>\n                           </div>\n                          \n                        </div>\n                 \n                    </Modal.Body>\n                    \n                 </Modal>\n                 \n                 </div>\n            \n        );\n    }\n}\n\nexport default UploadVideoForm;\n"]},"metadata":{},"sourceType":"module"}