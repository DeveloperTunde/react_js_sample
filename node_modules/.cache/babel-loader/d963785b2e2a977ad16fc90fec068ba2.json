{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/components/SchedularForm.jsx\";\nimport React, { Component } from 'react';\nimport '../../assets/css/styles.css';\nimport AlertComponent from '../../reuseables/Alert';\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst time = format(this.props.starttimepropfull, \"dd-MM-yyyy\");\nexport default class SchedularForm extends Component {\n  constructor() {\n    super();\n\n    this.fetchVideos = () => {\n      //http://192.168.8.100/videostreaming/allvideos\n      fetch('videostreaming/allvideos.php', {\n        method: 'POST',\n        body: JSON.stringify({\n          accesstoken: 'userName'\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        this.setState({\n          isLoaded: true,\n          videos: responseJSON['output'][0]['data']\n        });\n      });\n    };\n\n    this.state = {\n      startvideoat: '',\n      endvideoat: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: ''\n    };\n    this.handleStarttime = this.handleStarttime.bind(this);\n    this.handleEndtime = this.handleEndtime.bind(this);\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleStarttime(event) {\n    this.setState({\n      startvideoat: event.target.value\n    });\n  }\n\n  handleEndtime(event) {\n    this.setState({\n      endvideoat: event.target.value\n    });\n  }\n\n  submitSelections() {\n    let starttime = this.props.starttimeprop;\n    let endtime = this.props.endtimeprop;\n    fetch('/videostreaming/addselection.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        selectedvideo: this.props.selectedvideo,\n        selectedday: this.props.presentTabprop,\n        startvideoat: this.state.startvideoat,\n        endvideoat: this.state.endvideoat,\n        starttime,\n        endtime\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      // alert(responseJSON);\n      this.showAlert(true);\n\n      if (responseJSON == 'success') {\n        this.setState({\n          alerttitle: 'Success',\n          alertcontent: 'The program has been scheduled',\n          alerttype: 'success'\n        });\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n      } else if (responseJSON == 'failed') {\n        this.setState({\n          alerttitle: 'Failed',\n          alertcontent: 'Please select another time frame for this programme',\n          alerttype: 'warning'\n        });\n      } else if (responseJSON == 'errortiming') {\n        this.setState({\n          alerttitle: 'Timeframe Error',\n          alertcontent: 'The selected timeframe is greater than the programme duration',\n          alerttype: 'warning'\n        });\n      }\n\n      setTimeout(() => {\n        this.showAlert(false);\n      }, 5000);\n    });\n  }\n\n  render() {\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    var someDate = new Date();\n    var numberOfDaysToAdd = 3;\n    var date = someDate.setDate(someDate.getDate() + numberOfDaysToAdd);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadalert\",\n        children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n          title: alerttitle,\n          showalert: togglealert,\n          content: alertcontent,\n          type: alerttype,\n          closealert: () => this.showAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timepicker\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_title\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Schedule Programme \", this.props.selectedvideo, \" \", time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scheduled Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: format(this.props.starttimepropfull, \"dd-MM-yyyy\"),\n              defaultValue: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: this.props.starttimeprop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: this.props.endtimeprop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_subtitle\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Specify Programme Start and End Duration in Minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\",\n              value: this.state.startvideoat,\n              onChange: this.handleStarttime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End At:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\",\n              value: this.state.endvideoat,\n              onChange: this.handleEndtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_subtitle2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.submitSelections(),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.fetchVideos();\n  }\n\n}","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/components/SchedularForm.jsx"],"names":["React","Component","AlertComponent","format","time","props","starttimepropfull","SchedularForm","constructor","fetchVideos","fetch","method","body","JSON","stringify","accesstoken","then","response","json","responseJSON","setState","isLoaded","videos","state","startvideoat","endvideoat","togglealert","alerttitle","alertcontent","alerttype","handleStarttime","bind","handleEndtime","showAlert","e","event","target","value","submitSelections","starttime","starttimeprop","endtime","endtimeprop","headers","selectedvideo","selectedday","presentTabprop","setTimeout","window","location","reload","render","someDate","Date","numberOfDaysToAdd","date","setDate","getDate","componentDidMount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../../assets/css/styles.css'\nimport AlertComponent from '../../reuseables/Alert'\nimport { format } from \"date-fns\";\n\nconst time = format(this.props.starttimepropfull, \"dd-MM-yyyy\");\n\n\n\nexport default class SchedularForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n          startvideoat: '',\n          endvideoat: '',\n          togglealert:false,\n          alerttitle:'', alertcontent:'', alerttype:''\n        }\n\n        this.handleStarttime = this.handleStarttime.bind(this);\n        this.handleEndtime = this.handleEndtime.bind(this);\n    }\n    \n    showAlert(e){\n        this.setState({\n            togglealert: e\n        })\n      }\n    \n\n    handleStarttime(event) {\n        this.setState({\n            startvideoat: event.target.value\n        });\n    }\n\n    handleEndtime(event) {\n        this.setState({\n            endvideoat: event.target.value\n        });\n    }\n\n\n    submitSelections() {\n        let starttime = this.props.starttimeprop;\n        let endtime = this.props.endtimeprop;\n\n        fetch('/videostreaming/addselection.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                selectedvideo: this.props.selectedvideo,\n                selectedday: this.props.presentTabprop,\n                startvideoat: this.state.startvideoat,\n                endvideoat: this.state.endvideoat,\n                starttime,\n                endtime,\n\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n\n               // alert(responseJSON);\n                this.showAlert(true);\n               \n                if(responseJSON =='success'){\n                    this.setState({\n                        alerttitle:'Success', alertcontent:'The program has been scheduled', alerttype:'success'\n                     })\n                     setTimeout(() => {\n                        window.location.reload();\n                     }, 2000);\n                }else if (responseJSON =='failed') {\n                    this.setState({\n                        alerttitle:'Failed', alertcontent:'Please select another time frame for this programme', alerttype:'warning'\n                     })\n                }else if (responseJSON =='errortiming') {\n                    this.setState({\n                        alerttitle:'Timeframe Error', alertcontent:'The selected timeframe is greater than the programme duration', alerttype:'warning'\n                     })\n                }\n               setTimeout(() => {\n                this.showAlert(false);\n              }, 5000);\n\n            })\n\n\n\n    }\n\n\n    render() {\n        const {togglealert, alertcontent, alerttype, alerttitle} = this.state; \n        var someDate = new Date();\nvar numberOfDaysToAdd = 3;\nvar date = someDate.setDate(someDate.getDate() + numberOfDaysToAdd);  \n        return (\n            <div className=\"overlay\">\n            {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n         <div className=\"timepicker\">\n            <div className=\"form_wrapper\">\n                <div className=\"form_title\">\n                    <p>Schedule Programme {this.props.selectedvideo} {time}</p>\n                </div>\n           \n\n\n                <div className=\"form_box\">\n                    <label>Scheduled Date:</label>\n                    <input type=\"date\" value={format(this.props.starttimepropfull, \"dd-MM-yyyy\")} defaultValue={date} />\n                </div>\n\n                <div className=\"form_box\">\n                    <label>Start Time:</label>\n                    <input type=\"time\" value={this.props.starttimeprop} />\n                </div>\n\n                <div className=\"form_box\">\n                    <label>End Time:</label>\n                    <input type=\"time\"  value={this.props.endtimeprop}/>\n                </div>\n\n                {/* <div className=\"form_subtitle\">\n                    <p>djdjdjd</p>\n                    <p>{this.props.starttimefull}</p>\n                    \n                </div> */}\n\n                \n\n                \n\n                \n                <div className=\"form_subtitle\">\n                    <p>Specify Programme Start and End Duration in Minutes</p>\n                </div>\n                <div className=\"form_box\">\n                    <label>Start From:</label>\n                    <input type=\"text\"  placeholder=\"\" value={this.state.startvideoat} onChange={this.handleStarttime}/>\n                </div>\n\n                <div className=\"form_box\">\n                    <label>End At:</label>\n                    <input type=\"text\"  placeholder=\"\" value={this.state.endvideoat} onChange={this.handleEndtime}/>\n                </div>\n\n                <div className=\"form_subtitle2\">\n                    <button onClick={() => this.submitSelections()}>Submit</button>\n                </div>\n\n            </div>\n\n        </div>\n            </div>\n\n\n        );\n\n\n\n    };\n\n\n\n\n    fetchVideos = () => {\n        //http://192.168.8.100/videostreaming/allvideos\n        fetch('videostreaming/allvideos.php', {\n            method: 'POST',   \n            body: JSON.stringify({\n                accesstoken: 'userName',\n\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    isLoaded: true,\n                    videos: responseJSON['output'][0]['data'],\n                })\n            })\n    }\n\n\n\n\n    componentDidMount() {\n        this.fetchVideos();\n\n    }\n\n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}