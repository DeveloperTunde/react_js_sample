{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/videos/Subscriptions.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaPlus } from 'react-icons/fa';\nimport CreateChannelForm from '../components/CreateChannelForm';\nimport AlertComponent from '../reuseables/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserIndex extends Component {\n  constructor() {\n    super();\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.openChannel = () => {\n      if (sessionStorage.getItem('userReg') != null) {\n        this.setShow(true);\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Not Logged in!',\n          alertcontent: 'You have to login before you can create a channel',\n          alerttype: 'warning'\n        });\n      }\n    };\n\n    this.channelSubscription = e => {\n      let useremail = localStorage.getItem('userReg');\n      fetch('/videostreaming/channelsubscription.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          channelid: e\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        this.showAlert(true);\n        let response = responseJSON['output'][0]['data'];\n\n        if (response == 'success') {\n          this.setState({\n            alerttitle: 'Success!',\n            alertcontent: 'You have successfully suscribed to the channel',\n            alerttype: 'success'\n          });\n        } else if (response == 'failed') {\n          this.setState({\n            alerttitle: 'Failed!',\n            alertcontent: 'Unable to process your request at the moment. Try again later',\n            alerttype: 'warning'\n          });\n        } else {\n          this.setState({\n            alerttitle: 'Failed!',\n            alertcontent: 'Sorry. An error occur while trying to process the request',\n            alerttype: 'warning'\n          });\n        } //   setTimeout(() => {\n        //    this.showAlert(false);\n        //  }, 4000);\n\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000); // console.log(responseJSON);\n      });\n    };\n\n    this.channelUnsubscription = e => {\n      let useremail = localStorage.getItem('userReg');\n      fetch('/videostreaming/channelunsubscription.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          channelid: e\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        this.showAlert(true);\n        let response = responseJSON['output'][0]['data'];\n\n        if (response == 'success') {\n          this.setState({\n            alerttitle: 'Success!',\n            alertcontent: 'You have successfully unsuscribed from the channel',\n            alerttype: 'success'\n          });\n        }\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000); // console.log(responseJSON);\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showmodal2: false,\n      isLoggedin: false,\n      useremail: '',\n      myvideos: [],\n      allchannel: [],\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display'\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  componentDidMount() {\n    this.getAllChannel();\n  }\n\n  render() {\n    const {\n      allchannel\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 28\n          }, this), this.state.channelNotLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generalalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 20\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channels_top2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Subscribed Channels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"primaryButton\",\n                onClick: () => this.openChannel(),\n                children: [\" \", /*#__PURE__*/_jsxDEV(FaPlus, {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 85\n                }, this), \" Create Channel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channels_bottom\",\n              children: sessionStorage.getItem('userReg') == null ? /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"placeholdertext2\",\n                  children: \"You are not logged in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 62\n              }, this) : allchannel.map((channel, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"channel_box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_a\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: channel.logo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_b\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/channel_video/${channel.id}`,\n                      className: \"link\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: channel.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_c\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [channel.subscribers, \" Subscribers\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this), channel.substatus == 'yes' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_d\",\n                    onClick: () => this.channelUnsubscription(channel.id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton\",\n                      children: \"Unsubscribe \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 24\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_box_all channel_box_d\",\n                    onClick: () => this.channelSubscription(channel.id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton\",\n                      children: \"Subscribe \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 24\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CreateChannelForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  getAllChannel() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/subscribedchannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] = true) {\n        this.setState({\n          allchannel: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default UserIndex;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/videos/Subscriptions.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaPlus","CreateChannelForm","AlertComponent","UserIndex","constructor","setShow","e","setState","showmodal","openChannel","sessionStorage","getItem","showAlert","alerttitle","alertcontent","alerttype","channelSubscription","useremail","localStorage","fetch","method","headers","body","JSON","stringify","channelid","then","response","json","responseJSON","setTimeout","window","location","reload","channelUnsubscription","state","showmodal2","isLoggedin","myvideos","allchannel","togglealert","isrightside","isleftsidebar","componentDidMount","getAllChannel","render","toggleLeftSidebar","channelNotLogin","map","channel","i","logo","id","name","subscribers","substatus","setShow2","catch","error","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaPlus } from 'react-icons/fa';\nimport CreateChannelForm from '../components/CreateChannelForm'\nimport AlertComponent from '../reuseables/Alert'\n\n\nclass UserIndex extends Component {\n   \n   constructor(){\n      super();\n      this.state={\n          showmodal: false,\n          showmodal2: false,\n          isLoggedin: false,\n          useremail: '',\n          myvideos:[],\n          allchannel:[],\n          togglealert:false,\n          alerttitle:'', alertcontent:'', alerttype:'',\n          isrightside:'desktop_display',\n          isleftsidebar:'desktop_display'\n      }\n   }\n\n\nsetShow = (e) =>{\n  this.setState({\n      showmodal:e\n  })\n}\n\nshowAlert(e){\n   this.setState({\n       togglealert: e\n   })\n}\n\nopenChannel = () => {\n    if (sessionStorage.getItem('userReg') != null) {\n        this.setShow(true)\n    }else{\n        this.showAlert(true);\n        this.setState({\n            alerttitle:'Not Logged in!', alertcontent:'You have to login before you can create a channel', alerttype:'warning'\n         })\n    }\n   \n}\n\ncomponentDidMount(){\n   this.getAllChannel();\n}\n    render() {\n       const {allchannel} = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                  {\n                (this.state.channelNotLogin)? \n                   <div className=\"generalalert\">\n                   <AlertComponent \n                     title={alerttitle}\n                     showalert={togglealert} \n                     content={alertcontent}\n                     type={alerttype}\n                     closealert={() => this.showAlert(false)}/>\n                   </div>\n                    :\"\"\n                  }\n                  <div className=\"user_wrapper\">\n                   \n             <div className=\"channels_top2\">\n                <span>Subscribed Channels</span>\n                <span className=\"primaryButton\" onClick={() => this.openChannel()}> <FaPlus className=\"icon\" /> Create Channel</span>\n             </div>\n\n             <div className=\"channels_bottom\">\n\n            {\n                (sessionStorage.getItem('userReg') == null)? <center><p className=\"placeholdertext2\">You are not logged in</p></center> : \n               allchannel.map((channel, i) =>{\n                 return <div className=\"channel_box\" key={i}>\n                    <div className=\"channel_box_all channel_box_a\">\n                      <img src={channel.logo} />\n                    </div>\n                    <div className=\"channel_box_all channel_box_b\">\n                    <Link  to={`/channel_video/${channel.id}`} className=\"link\"><span>{channel.name}</span></Link>\n                    </div>\n                    <div className=\"channel_box_all channel_box_c\">\n                       <span>{channel.subscribers} Subscribers</span>\n                    </div>\n                    {\n                       (channel.substatus =='yes')? \n                       <div className=\"channel_box_all channel_box_d\" onClick={() => this.channelUnsubscription(channel.id)}>\n                          <span className=\"primaryButton\">Unsubscribe </span>\n                       </div>\n                       :\n                       <div className=\"channel_box_all channel_box_d\" onClick={() => this.channelSubscription(channel.id)}>\n                          <span className=\"primaryButton\">Subscribe </span>\n                       </div>\n                    }\n                    \n                </div>\n                \n               })\n            }\n                \n              \n                \n             </div>\n                  </div>\n         \n                <div>\n                <CreateChannelForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    getAllChannel(){\n      let useremail = sessionStorage.getItem('userReg');\n      fetch('/videostreaming/subscribedchannels.php', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            useremail: useremail,\n        })\n      })\n  \n          .then((response) => response.json())\n          .then((responseJSON) => {\n              if (responseJSON['output'][0]['success'] = true) {\n                  this.setState({\n                      allchannel: responseJSON['output'][0]['data']\n                  })\n              }\n        // console.log(responseJSON);\n          }).catch((error) =>{\n             // console.log(error);\n          })\n  }\n\n  channelSubscription = (e) => {\n   let useremail = localStorage.getItem('userReg');\n    fetch('/videostreaming/channelsubscription.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n        })\n    })\n\n        .then((response) => response.json())\n        .then((responseJSON) => {\n         this.showAlert(true);\n         let response = responseJSON['output'][0]['data'];\n         if (response == 'success') {\n            this.setState({\n               alerttitle:'Success!', alertcontent:'You have successfully suscribed to the channel', alerttype:'success'\n            })\n         }else if(response == 'failed'){\n            this.setState({\n               alerttitle:'Failed!', alertcontent:'Unable to process your request at the moment. Try again later', alerttype:'warning'\n            })\n         }else{\n            this.setState({\n               alerttitle:'Failed!', alertcontent:'Sorry. An error occur while trying to process the request', alerttype:'warning'\n            })\n         }\n         \n\n      //   setTimeout(() => {\n      //    this.showAlert(false);\n      //  }, 4000);\n\n       setTimeout(() => {\n         window.location.reload();\n       }, 2000);\n\n       \n         // console.log(responseJSON);\n        })\n}\n\n\nchannelUnsubscription = (e) => {\n   let useremail = localStorage.getItem('userReg');\n    fetch('/videostreaming/channelunsubscription.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n        })\n    })\n\n        .then((response) => response.json())\n        .then((responseJSON) => {\n         this.showAlert(true);\n         let response = responseJSON['output'][0]['data'];\n         if (response == 'success') {\n            this.setState({\n               alerttitle:'Success!', alertcontent:'You have successfully unsuscribed from the channel', alerttype:'success'\n            })\n         }\n\n       setTimeout(() => {\n         window.location.reload();\n       }, 2000);\n\n       \n         // console.log(responseJSON);\n        })\n}\n\ntoggleLeftSidebar(){\n\n   let isrightsidebar = this.state.isrightside;\n   if (isrightsidebar == 'mobile_display') {\n       this.setState({\n           isrightside:'desktop_display'\n       })\n   }\n\n   let isleftsidebar = this.state.isleftsidebar;\n   if (isleftsidebar == 'desktop_display') {\n       this.setState({\n           isleftsidebar:'mobile_display'\n       })\n   }else{\n       this.setState({\n           isleftsidebar:'desktop_display'\n       })\n   }\n}\n}\n\nexport default UserIndex;\n"]},"metadata":{},"sourceType":"module"}