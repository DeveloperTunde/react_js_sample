{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/videos/ChannelVideos.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaSearch, FaEye, FaEyeSlash, FaPlay, FaCog } from 'react-icons/fa';\nimport User1 from './../assets/images/user1.png';\nimport Card from 'react-bootstrap/Card';\nimport Thumbnailbg from './../assets/images/bgthumbnail2.png';\nimport AlertComponent from '../reuseables/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Videos extends Component {\n  constructor() {\n    super();\n\n    this.toggleSettings = () => {\n      this.setState(prevState => ({\n        opensettings: !prevState.opensettings\n      }));\n    };\n\n    this.getChannelVideos = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      fetch('/videostreaming/channelvideos.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          channelid: this.props.match.params.id,\n          useremail: useremail\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        if (responseJSON['output'][0]['success'] == 'true') {\n          this.setState({\n            channelvideos: responseJSON['output'][0]['data']\n          });\n        }\n\n        this.setState({\n          channelprops: responseJSON['output'][0],\n          allsub: responseJSON['output'][0]['allsubscription']\n        });\n        console.log(responseJSON['output'][0]);\n      });\n    };\n\n    this.channelSubscription = e => {\n      let useremail = sessionStorage.getItem('userReg');\n\n      if (useremail != null) {\n        this.setState({\n          btn1: 'Unsubscribe'\n        });\n        fetch('/videostreaming/channelsubscription.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            useremail: useremail,\n            channelid: e\n          })\n        }).then(response => response.json()).then(responseJSON => {\n          let response = responseJSON['output'][0]['data'];\n\n          if (response == 'success') {\n            this.setState({\n              alerttitle: 'Success!',\n              alertcontent: 'You have successfully suscribed to the channel',\n              alerttype: 'success'\n            });\n          } else if (response == 'failed') {\n            this.setState({\n              alerttitle: 'Failed!',\n              alertcontent: 'Unable to process your request at the moment. Try again later',\n              alerttype: 'warning'\n            });\n          } else {\n            this.setState({\n              alerttitle: 'Failed!',\n              alertcontent: 'Sorry. An error occur while trying to process the request',\n              alerttype: 'warning'\n            });\n          }\n\n          setTimeout(() => {\n            window.location.reload();\n          }, 2000);\n          console.log(responseJSON);\n        });\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Failed!',\n          alertcontent: 'You have to login before subscribing to the channel',\n          alerttype: 'danger'\n        });\n      }\n    };\n\n    this.channelUnsubscription = e => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        btn2: 'Subscribe'\n      });\n      fetch('/videostreaming/channelunsubscription.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          channelid: e\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        let response = responseJSON['output'][0]['data'];\n\n        if (response == 'success') {\n          this.setState({\n            alerttitle: 'Success!',\n            alertcontent: 'You have successfully unsuscribed from the channel',\n            alerttype: 'success'\n          });\n        }\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000);\n        console.log(responseJSON);\n      });\n    };\n\n    this.state = {\n      channelvideos: [],\n      channelprops: [],\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      allsub: 0,\n      btn1: 'Subscribe',\n      btn2: 'Unsubscribe',\n      opensettings: false\n    };\n  }\n\n  componentDidMount() {\n    this.getChannelVideos();\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  render() {\n    const {\n      channelvideos,\n      channelprops,\n      alerttitle,\n      togglealert,\n      alertcontent,\n      alerttype\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"index_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"index_title2\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: channelprops.channelname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrapper2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channel_banner\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: channelprops.channelbanner\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channel_header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"channel_header_left\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_left_a\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: channelprops.channellogo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 36\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_left_b\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: channelprops.channelowner\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [this.state.allsub, \" Subscriber\", this.state.allsub > 1 ? 's' : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 29\n                }, this), channelprops.substatus == 'yes' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"channel_header_right\",\n                  children: [channelprops.channelemail == sessionStorage.getItem('userReg') ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_right_a\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(FaCog, {\n                        className: \"settingicon\",\n                        onClick: () => this.toggleSettings()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 44\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 37\n                    }, this), this.state.opensettings ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        to: `/editchannel/${channelprops.channelid}`,\n                        className: \"link\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"primaryColor\",\n                            children: \"Edit \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 94,\n                            columnNumber: 117\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 112\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 42\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"\",\n                          onClick: () => this.deleteChannel(),\n                          children: \"Delete \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 47\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 42\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 38\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_right_b\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton span_padding\",\n                      onClick: () => this.channelUnsubscription(channelprops.channelid),\n                      children: [this.state.btn2, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 32\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"channel_header_right\",\n                  children: [channelprops.channelemail == sessionStorage.getItem('userReg') ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_right_a\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(FaCog, {\n                        className: \"settingicon\",\n                        onClick: () => this.toggleSettings()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 46\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 39\n                    }, this), this.state.opensettings ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        to: `/editchannel/${channelprops.channelid}`,\n                        className: \"link\",\n                        children: /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"primaryColor\",\n                            children: \"Edit \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 114,\n                            columnNumber: 118\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 114\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"\",\n                          onClick: () => this.deleteChannel(),\n                          children: \"Delete \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 44\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 40\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 35\n                  }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"channel_header_right_b\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"primaryButton span_padding\",\n                      onClick: () => this.channelSubscription(channelprops.channelid),\n                      children: [this.state.btn1, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 24\n              }, this), !this.state.showvideos ? '' : channelvideos.map((video, i) => {\n                return /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/videoview/${video.videoid}`,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"video_box\",\n                    children: [/*#__PURE__*/_jsxDEV(Card, {\n                      className: \"video_box_img\",\n                      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                        src: video.videothumbnail,\n                        alt: \"image\",\n                        className: \"admin_index_left_a_img\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"videoview_content_wrap\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n                        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"overlaycontent-index\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 139,\n                                columnNumber: 45\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 139,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"video_box_content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"video_box_content_left\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: video.profilepicture,\n                          alt: \"image\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 146,\n                          columnNumber: 38\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 34\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"video_box_content_right\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"span_title\",\n                          children: video.videotitle\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 38\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: video.videodescription\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 150,\n                          columnNumber: 38\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"video_content_right_b\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            children: /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 152,\n                              columnNumber: 48\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 42\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: [video.numberofviewers, \"views .\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 153,\n                            columnNumber: 42\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: video.daysago\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 154,\n                            columnNumber: 42\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 151,\n                          columnNumber: 38\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 34\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 30\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 32\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  deleteChannel(chid) {\n    if (window.confirm(\"Are you sure you want to delete this channel?\")) {\n      fetch('/videostreaming/deletechannel.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chid: chid\n        })\n      }).then(response => response.text()).then(responseJSON => {\n        window.location = '/user/3'; //console.log(responseJSON);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default Videos;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/videos/ChannelVideos.jsx"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaSearch","FaEye","FaEyeSlash","FaPlay","FaCog","User1","Card","Thumbnailbg","AlertComponent","Videos","constructor","toggleSettings","setState","prevState","opensettings","getChannelVideos","useremail","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","channelid","props","match","params","id","then","response","json","responseJSON","channelvideos","channelprops","allsub","console","log","channelSubscription","e","btn1","alerttitle","alertcontent","alerttype","setTimeout","window","location","reload","showAlert","channelUnsubscription","btn2","state","isrightside","isleftsidebar","togglealert","componentDidMount","render","toggleLeftSidebar","channelname","channelbanner","channellogo","channelowner","substatus","channelemail","deleteChannel","showvideos","map","video","i","videoid","videothumbnail","profilepicture","videotitle","videodescription","numberofviewers","daysago","chid","confirm","text","catch","error","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaSearch,  FaEye, FaEyeSlash , FaPlay, FaCog} from 'react-icons/fa'\nimport User1 from './../assets/images/user1.png'\nimport Card from 'react-bootstrap/Card'\nimport Thumbnailbg from './../assets/images/bgthumbnail2.png'\nimport AlertComponent from '../reuseables/Alert'\n\nclass Videos extends Component {\n    constructor(){\n        super();\n        this.state={\n            channelvideos:[],\n            channelprops:[],\n            isrightside:'desktop_display',\n            isleftsidebar:'desktop_display',\n            togglealert:false,\n            alerttitle:'', alertcontent:'', alerttype:'',\n            allsub: 0,\n            btn1:'Subscribe',\n            btn2:'Unsubscribe',\n            opensettings:false,\n        }\n    }\n\n\n    componentDidMount(){\n        this.getChannelVideos();\n    }\n\n\nshowAlert(e){\n    this.setState({\n        togglealert: e\n    })\n }\n toggleSettings =() =>{\n    this.setState(prevState => ({\n        opensettings: !prevState.opensettings\n      }));\n }\n    render() {\n        const {channelvideos, channelprops, alerttitle,togglealert, alertcontent, alerttype}  = this.state;\n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                    <div className=\"index_wrapper\">\n                       <div className=\"index_title2\">\n                          <p>{channelprops.channelname}</p>\n                       </div>\n                       \n                       <div className=\"user_wrapper2\">\n                       <div className=\"channel_banner\">\n                            <img src={channelprops.channelbanner} />\n                       </div>\n\n                       <div className=\"channel_header\">\n                            <div className=\"channel_header_left\">\n                                <div className=\"channel_header_left_a\">\n                                   <img src={channelprops.channellogo} />\n                                </div>\n                                <div className=\"channel_header_left_b\">\n                                    <span>{channelprops.channelowner}</span>\n                                    <span>{this.state.allsub} Subscriber{(this.state.allsub > 1)?'s':''}</span>\n                                </div>\n                            </div>\n                            \n                            {\n                               (channelprops.substatus =='yes')? \n                               <div className=\"channel_header_right\"  >\n                                  {(channelprops.channelemail == sessionStorage.getItem('userReg') )?\n                                    <div className=\"channel_header_right_a\">\n                                    <span ><FaCog className=\"settingicon\" onClick={() => this.toggleSettings()}/> </span>\n                                    {(this.state.opensettings)?\n                                     <ul>\n                                         <Link to={`/editchannel/${channelprops.channelid}`} className=\"link\"> <li> <span className=\"primaryColor\">Edit </span></li></Link>\n                                         <li> <span className=\"\" onClick={() => this.deleteChannel()} >Delete </span></li>\n                                        \n                                     </ul>\n                                    :''\n                                    }\n                                </div>\n                                 :''}\n                                 <div className=\"channel_header_right_b\">\n                                    <span className=\"primaryButton span_padding\" onClick={() => this.channelUnsubscription(channelprops.channelid)}>{this.state.btn2} </span>\n                                  </div>\n                              </div>\n                               :\n                               <div className=\"channel_header_right\" >\n                                  {(channelprops.channelemail == sessionStorage.getItem('userReg') )?                \n                                    \n                                  <div className=\"channel_header_right_a\">\n                                      <span ><FaCog className=\"settingicon\" onClick={() => this.toggleSettings()}/> </span>\n                                      {(this.state.opensettings)?\n                                       <ul>\n                                            <Link to={`/editchannel/${channelprops.channelid}`} className=\"link\"><li><span className=\"primaryColor\">Edit </span></li></Link>\n                                           <li> <span className=\"\" onClick={() => this.deleteChannel()} >Delete </span></li>\n                                          \n                                       </ul>\n                                      :''\n                                      }\n                                  </div>\n                                  :''}\n                                  <div className=\"channel_header_right_b\">\n                                    <span className=\"primaryButton span_padding\" onClick={() => this.channelSubscription(channelprops.channelid)}>{this.state.btn1} </span>\n                                  </div>\n                               </div>\n                            }\n                       </div>\n\n                        {\n                      (!this.state.showvideos)? '':\n                      channelvideos.map((video, i) =>{\n                        return <Link  to={`/videoview/${video.videoid}`}> <div className=\"video_box\">\n                              <Card className=\"video_box_img\">\n                                <Card.Img src={video.videothumbnail} alt=\"image\" className=\"admin_index_left_a_img\"/>\n                                <div className=\"videoview_content_wrap\"></div>\n                                <Card.ImgOverlay>\n                                  <Card.Text>\n                                    <div className=\"overlaycontent-index\">\n                                      <span><FaPlay/></span>\n                                    </div>\n                                  </Card.Text>\n                                </Card.ImgOverlay>\n                              </Card>\n                             <div className=\"video_box_content\">\n                                 <div className=\"video_box_content_left\">\n                                     <img src={video.profilepicture} alt=\"image\" />\n                                 </div>\n                                 <div className=\"video_box_content_right\">\n                                     <span className=\"span_title\">{video.videotitle}</span>\n                                     <span>{video.videodescription}</span>\n                                     <div className=\"video_content_right_b\">\n                                         <span><FaEye/></span>\n                                         <span>{video.numberofviewers}views .</span>\n                                         <span>{video.daysago}</span> \n                                     </div>\n                                 </div>\n                             </div>\n                         </div>\n                         </Link>\n                    })   \n                    }\n\n                       </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    } \n\n\n     deleteChannel(chid){\n        if (window.confirm(\"Are you sure you want to delete this channel?\")) {\n            fetch('/videostreaming/deletechannel.php', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                  chid: chid\n              })\n          })\n      \n              .then((response) => response.text())\n              .then((responseJSON) => {\n                window.location = '/user/3';\n                //console.log(responseJSON);\n              }).catch((error) =>{\n                console.log(error);\n              })\n          }\n    }\n    \n    getChannelVideos = () => {\n        let useremail = sessionStorage.getItem('userReg');\n        fetch('/videostreaming/channelvideos.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                channelid: this.props.match.params.id,\n                useremail: useremail,\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n                if (responseJSON['output'][0]['success'] == 'true') {\n                    this.setState({\n                        channelvideos: responseJSON['output'][0]['data'],\n                    })\n                }\n                this.setState({\n                    channelprops : responseJSON['output'][0],\n                    allsub:  responseJSON['output'][0]['allsubscription'],\n\n                })\n                console.log(responseJSON['output'][0]);\n            })\n    }\n\n    toggleLeftSidebar(){\n\n        let isrightsidebar = this.state.isrightside;\n        if (isrightsidebar == 'mobile_display') {\n            this.setState({\n                isrightside:'desktop_display'\n            })\n        }\n\n        let isleftsidebar = this.state.isleftsidebar;\n        if (isleftsidebar == 'desktop_display') {\n            this.setState({\n                isleftsidebar:'mobile_display'\n            })\n        }else{\n            this.setState({\n                isleftsidebar:'desktop_display'\n            })\n        }\n    }\n\n\n    channelSubscription = (e) => {\n        let useremail = sessionStorage.getItem('userReg');\n        if (useremail != null) {\n            \n        this.setState({\n            btn1:'Unsubscribe'\n        })\n         fetch('/videostreaming/channelsubscription.php', {\n             method: 'POST',\n             headers: {\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify({\n                 useremail: useremail,\n                 channelid: e\n             })\n         })\n     \n             .then((response) => response.json())\n             .then((responseJSON) => {\n              let response = responseJSON['output'][0]['data'];\n              if (response == 'success') {\n                 this.setState({\n                    alerttitle:'Success!', alertcontent:'You have successfully suscribed to the channel', alerttype:'success'\n                 })\n              }else if(response == 'failed'){\n                 this.setState({\n                    alerttitle:'Failed!', alertcontent:'Unable to process your request at the moment. Try again later', alerttype:'warning'\n                 })\n              }else{\n                 this.setState({\n                    alerttitle:'Failed!', alertcontent:'Sorry. An error occur while trying to process the request', alerttype:'warning'\n                 })\n              }\n              \n            setTimeout(() => {\n              window.location.reload();\n            }, 2000);\n     \n            \n               console.log(responseJSON);\n             })\n\n            }else{\n                this.showAlert(true);\n                this.setState({\n                   alerttitle:'Failed!', alertcontent:'You have to login before subscribing to the channel', alerttype:'danger'\n                })\n               }\n     }\n     \n     \n     channelUnsubscription = (e) => {\n        let useremail = sessionStorage.getItem('userReg');\n        this.setState({\n            btn2:'Subscribe'\n        })\n         fetch('/videostreaming/channelunsubscription.php', {\n             method: 'POST',\n             headers: {\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify({\n                 useremail: useremail,\n                 channelid: e\n             })\n         })\n     \n             .then((response) => response.json())\n             .then((responseJSON) => {\n              let response = responseJSON['output'][0]['data'];\n              if (response == 'success') {\n                 this.setState({\n                    alerttitle:'Success!', alertcontent:'You have successfully unsuscribed from the channel', alerttype:'success'\n                 })\n              }\n     \n            setTimeout(() => {\n              window.location.reload();\n            }, 2000);\n     \n            \n               console.log(responseJSON);\n             })\n     }\n\n}\n\nexport default Videos;\n"]},"metadata":{},"sourceType":"module"}