{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/components/CreateChannelForm.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt } from 'react-icons/fa';\nimport Modal from 'react-bootstrap/Modal';\nimport Upload from '../assets/images/upload.png';\nimport AlertComponent from '../reuseables/Alert';\nimport Gif from '../assets/images/mygif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadVideoForm extends Component {\n  constructor() {\n    super();\n\n    this.createChannel = () => {\n      const formData = new FormData();\n\n      if (this.state.loggeduser != null) {\n        if (this.state.channelname != '') {\n          if (this.state.uploadFile != '') {\n            if (this.state.uploadBanner != '') {\n              formData.append(\"channellogo\", this.state.uploadFile);\n              formData.append(\"channelbanner\", this.state.uploadBanner);\n              formData.append(\"channelname\", this.state.channelname);\n              formData.append(\"user\", this.state.loggeduser); ///videostreaming/createchannel.php\n\n              fetch('http://localhost:3001/add', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  Accept: 'application/json'\n                }\n              }).then(response => response.text()).then(responseJSON => {\n                this.showAlert(true);\n                this.setState({\n                  alerttitle: 'Success!',\n                  alertcontent: `${responseJSON}`,\n                  alerttype: 'success'\n                });\n                this.props.closeModal();\n                setTimeout(() => {\n                  this.showAlert(false);\n                }, 4000);\n              }).catch(error => {\n                console.log(error);\n              });\n            } else {\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Error',\n                alertcontent: 'Please choose a channel banner',\n                alerttype: 'warning'\n              });\n            }\n          } else {\n            this.showAlert(true);\n            this.setState({\n              alerttitle: 'Error',\n              alertcontent: 'Please choose a channel logo',\n              alerttype: 'warning'\n            });\n          }\n        } else {\n          this.showAlert(true);\n          this.setState({\n            alerttitle: 'Error',\n            alertcontent: 'Please fill the channel name box',\n            alerttype: 'warning'\n          });\n        }\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Error',\n          alertcontent: 'Please login before you can create a channel',\n          alerttype: 'warning'\n        });\n      }\n\n      setTimeout(() => {\n        this.showAlert(false);\n      }, 4000);\n    };\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.getUserEmail = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        loggeduser: useremail\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      uploadFile: '',\n      uploadBanner: '',\n      loggeduser: '',\n      channelname: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: ''\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async setUploadFile(e) {\n    this.setState({\n      uploadFile: e[0]\n    });\n    let file = e[0];\n    let filesize = file.size; //console.log(file);\n  }\n\n  async setUploadFile2(e) {\n    this.setState({\n      uploadBanner: e[0]\n    });\n    let file = e[0];\n    let filesize = file.size;\n  }\n\n  componentDidMount() {\n    this.getUserEmail();\n  }\n\n  render() {\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadalert\",\n        children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n          title: alerttitle,\n          showalert: togglealert,\n          content: alertcontent,\n          type: alerttype,\n          closealert: () => this.showAlert(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.openModal,\n        onHide: this.props.closeModal,\n        dialogClassName: \"modal-100w\",\n        size: \"xl\",\n        \"aria-labelledby\": \"file-form\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"file-form\",\n            children: \"Create Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file_form_wrapper_a\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Create A Channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Channel Name [18 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"channelname\",\n                value: this.state.channelname,\n                onChange: this.handleInput.bind(this),\n                maxLength: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              hidden: true,\n              ref: input => this.inputElement = input,\n              onChange: e => this.setUploadFile(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_b_a\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Click here to select channel logo\", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_c_a\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tertiaryButton\",\n                onClick: () => this.inputElement.click(),\n                children: \"Select Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: this.state.uploadFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              hidden: true,\n              ref: input => this.inputElement2 = input,\n              onChange: e => this.setUploadFile2(e.target.files)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_b_a\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Click here to select channel banner \", /*#__PURE__*/_jsxDEV(\"s\", {\n                  style: {\n                    color: 'tomato'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 75\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_c_a\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tertiaryButton\",\n                onClick: () => this.inputElement2.click(),\n                children: \"Select Banner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: this.state.uploadBanner.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primaryButton form_group upload_video_btn\",\n              style: {\n                textAlign: 'center',\n                marginTop: '4vh'\n              },\n              onClick: () => this.createChannel(),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Create Channel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default UploadVideoForm;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/components/CreateChannelForm.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","FaEye","FaSquare","FaShareAlt","Modal","Upload","AlertComponent","Gif","UploadVideoForm","constructor","createChannel","formData","FormData","state","loggeduser","channelname","uploadFile","uploadBanner","append","fetch","method","body","headers","Accept","then","response","text","responseJSON","showAlert","setState","alerttitle","alertcontent","alerttype","props","closeModal","setTimeout","catch","error","console","log","setShow","e","showmodal","getUserEmail","useremail","sessionStorage","getItem","togglealert","handleInput","event","target","value","name","setUploadFile","file","filesize","size","setUploadFile2","componentDidMount","render","openModal","color","bind","input","inputElement","files","click","inputElement2","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt } from 'react-icons/fa'\nimport Modal from 'react-bootstrap/Modal'\nimport Upload from '../assets/images/upload.png'\nimport AlertComponent from '../reuseables/Alert'\nimport Gif from '../assets/images/mygif.gif'\n\n\nclass UploadVideoForm extends Component {\n     constructor(){\n        super();\n        this.state={\n            showmodal: false,\n            uploadFile:'',\n            uploadBanner:'',\n            loggeduser:'',\n            channelname:'',\n            togglealert:false,\n            alerttitle:'', alertcontent:'', alerttype:''\n\n        }\n     }\n\n  showAlert(e){\n      this.setState({\n          togglealert: e\n      })\n   }\n  \n   handleInput(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n          [name]: value\n        });\n      }\n\n  async setUploadFile(e){\n    this.setState({\n      uploadFile:e[0]\n    })\n    let file = e[0];\n    let filesize = file.size;\n\n\n    //console.log(file);\n  \n  }\n\n  async setUploadFile2(e){\n    this.setState({\n      uploadBanner:e[0]\n    })\n    let file = e[0];\n    let filesize = file.size;\n \n  }\n  \n\n\n\ncreateChannel =() =>{\n\n  const formData = new FormData();\n\n  if (this.state.loggeduser != null) {\n     if (this.state.channelname !='' ) {\n        if (this.state.uploadFile != '') {\n           if (this.state.uploadBanner !='') {\n\n            formData.append(\"channellogo\", this.state.uploadFile);\n            formData.append(\"channelbanner\", this.state.uploadBanner);\n            formData.append(\"channelname\", this.state.channelname);\n            formData.append(\"user\", this.state.loggeduser);\n\n            ///videostreaming/createchannel.php\n            fetch('http://localhost:3001/add',\n            {\n                method: 'POST',                   \n                body: formData,\n                headers: {\n                    Accept: 'application/json',\n                  },\n            }\n            ).then((response) => response.text())\n            .then((responseJSON) => {\n            this.showAlert(true);\n            this.setState({\n              alerttitle:'Success!', alertcontent:`${responseJSON}`, alerttype:'success'\n            })\n            this.props.closeModal();\n\n            setTimeout(() => {\n              this.showAlert(false);\n            }, 4000);\n\n\n            }).catch((error) => {\n               console.log(error);  \n\n            })\n\n           }else{\n            this.showAlert(true);\n            this.setState({\n              alerttitle:'Error', alertcontent: 'Please choose a channel banner', alerttype:'warning'\n            })\n           }\n        }else{\n          this.showAlert(true);\n          this.setState({\n            alerttitle:'Error', alertcontent: 'Please choose a channel logo', alerttype:'warning'\n          })\n        }\n     }else{\n      this.showAlert(true);\n      this.setState({\n        alerttitle:'Error', alertcontent: 'Please fill the channel name box', alerttype:'warning'\n      })\n     }\n  }else{\n    this.showAlert(true);\n    this.setState({\n      alerttitle:'Error', alertcontent: 'Please login before you can create a channel', alerttype:'warning'\n    })\n\n    \n  }\n  setTimeout(() => {\n    this.showAlert(false);\n  }, 4000);\n\n}\n\n\n\n\n  setShow = (e) =>{\n    this.setState({\n        showmodal:e\n    })\n  }\n   \n  getUserEmail = () =>{\n  let useremail =  sessionStorage.getItem('userReg');\n  this.setState({\n      loggeduser:useremail\n  })\n  }\n\n  componentDidMount(){\n      this.getUserEmail();\n  }\n\n\n\n    render() {     \n      const {togglealert, alertcontent, alerttype, alerttitle} = this.state;  \n      \n        return (\n              <div className=\"content\">  \n                     {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                 <Modal\n                     show={this.props.openModal}\n                     onHide={this.props.closeModal}\n                     dialogClassName=\"modal-100w\"\n                     size=\"xl\"\n                     aria-labelledby=\"file-form\"\n                     centered\n                   >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"file-form\" >\n                           Create Channel\n                        </Modal.Title>\n                    </Modal.Header>\n                     <Modal.Body>\n                   \n                        <div className=\"file_form_wrapper_a\">\n                        <div className=\"login_title\">\n                            <span>Create A Channel</span>\n                        </div>\n                        <div className=\"form_group\">\n                                <label>Channel Name [18 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <input type=\"text\"  \n                                       name=\"channelname\"\n                                       value={this.state.channelname} \n                                       onChange={this.handleInput.bind(this)}\n                                       maxLength={18}/>\n                           </div>\n                           <input type=\"file\" accept=\"image/*\"\n                                  hidden={true}\n                                  ref={input => this.inputElement = input}\n                                  onChange={(e) => this.setUploadFile(e.target.files)} \n                                  />\n                           <div className='file_b_a' >\n                               <span>Click here to select channel logo<s style={{color:'tomato'}}>*</s></span>\n                           </div>\n                           <div className='file_c_a'>\n                               <span className=\"tertiaryButton\" onClick={() => this.inputElement.click()}>Select Logo</span>\n                               <span>{this.state.uploadFile.name}</span>\n                           </div>\n\n                           <input type=\"file\" accept=\"image/*\"\n                                  hidden={true}\n                                  ref={input => this.inputElement2 = input}\n                                  onChange={(e) => this.setUploadFile2(e.target.files)} \n                                  />\n                           <div className='file_b_a' >\n                               <span >Click here to select channel banner <s style={{color:'tomato'}}>*</s></span>\n                           </div>\n                           <div className='file_c_a' >\n                               <span className=\"tertiaryButton\" onClick={() => this.inputElement2.click()}>Select Banner</span>\n                               <span>{this.state.uploadBanner.name}</span>\n                           </div>\n\n\n                          \n                           <div className=\"primaryButton form_group upload_video_btn\" style={{textAlign:'center', marginTop:'4vh'}} onClick={() =>this.createChannel()}>\n                               <span >Create Channel</span>\n                           </div>\n                           \n                        </div>\n                    </Modal.Body>\n                 </Modal>\n\n                 </div>\n            \n        );\n    }\n}\n\nexport default UploadVideoForm;\n"]},"metadata":{},"sourceType":"module"}