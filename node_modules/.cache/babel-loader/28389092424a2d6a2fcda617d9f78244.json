{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/EditVideo.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt, FaPencilAlt } from 'react-icons/fa';\nimport Thumbnailbg from './../assets/images/bgthumbnail.png';\nimport User from './../assets/images/user.png';\nimport IndexTabs from './components/IndexTabs';\nimport UploadVideoForm from './components/UploadVideoForm';\nimport AlertComponent from './../reuseables/Alert';\nimport Gif from '../assets/images/mygif.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitEdit = () => {\n      const formData = new FormData();\n\n      if (this.state.videouploader != null) {\n        if (this.state.videotitle != '') {\n          if (this.state.videoshortdescription != '') {\n            if (this.state.videofulldescription != '') {\n              formData.append(\"videotitle\", this.state.videotitle);\n              formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n              formData.append(\"videofulldescription\", this.state.videofulldescription);\n              formData.append(\"programid\", this.state.videouploader);\n\n              const Mylabel = /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Please wait \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Gif,\n                  className: \"alertloader\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 30\n              }, this);\n\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Uploading',\n                alertcontent: Mylabel,\n                alerttype: 'success'\n              });\n              fetch('/videostreaming/editprogram.php', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  Accept: 'application/json'\n                }\n              }).then(response => response.json()).then(responseJSON => {\n                let status = responseJSON['output'][0]['status'];\n\n                if (status == 'true') {\n                  this.setState({\n                    alerttitle: 'Success!',\n                    alertcontent: 'The programme has been edited successfully',\n                    alerttype: 'success'\n                  });\n                }\n\n                console.log(responseJSON);\n                setTimeout(() => {\n                  this.showAlert(false);\n                }, 4000);\n              }).catch(error => {\n                console.log(error);\n              });\n            } else {\n              this.showAlert(true);\n              this.setState({\n                alerttitle: 'Error',\n                alertcontent: 'Please fill the programme full description box',\n                alerttype: 'warning'\n              });\n            }\n          } else {\n            this.showAlert(true);\n            this.setState({\n              alerttitle: 'Error',\n              alertcontent: 'Please fill the programme short description box',\n              alerttype: 'warning'\n            });\n          }\n        } else {\n          this.showAlert(true);\n          this.setState({\n            alerttitle: 'Error',\n            alertcontent: 'Please fill the programme title box',\n            alerttype: 'warning'\n          });\n        }\n      } else {\n        this.showAlert(true);\n        this.setState({\n          alerttitle: 'Error',\n          alertcontent: 'Please login before you can edit this programme',\n          alerttype: 'warning'\n        });\n      }\n\n      setTimeout(() => {\n        this.showAlert(false);\n      }, 4000);\n    };\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.setShow2 = e => {\n      this.setState({\n        showmodal2: e,\n        showmodal: false\n      });\n    };\n\n    this.showEdit = e => {\n      this.setState({\n        showedit: e\n      });\n    };\n\n    this.getUserEmail = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      this.setState({\n        videouploader: useremail\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showedit: false,\n      showmodal2: false,\n      thisvideo: [],\n      videouploader: '',\n      videotitle: '',\n      videocategory: '',\n      crop: '',\n      channel: '',\n      videoshortdescription: '',\n      videofulldescription: '',\n      tags: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      ischannelAvailable: false,\n      mychannels: [],\n      isloaded: false\n    };\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  getChannels() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/mychannels.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      if (responseJSON['output'][0]['success'] == 'true') {\n        this.setState({\n          ischannelAvailable: true,\n          mychannels: responseJSON['output'][0]['data']\n        });\n      } // console.log(responseJSON['output']);\n\n    }).catch(error => {// console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getUserEmail();\n    this.getChannels();\n    this.getVideo();\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle,\n      mychannels\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        showmodal1: () => this.setShow(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_form_wrapper3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Programme Title [30 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"videotitle\",\n                  value: this.state.videotitle,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 30\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group form_group2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Programme Short Details [64 characters max]\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 83\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"videoshortdescription\",\n                  value: this.state.videoshortdescription,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 64\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group \",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Programme Full Details\", /*#__PURE__*/_jsxDEV(\"s\", {\n                    style: {\n                      color: 'tomato'\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"videofulldescription\",\n                  value: this.state.videofulldescription,\n                  onChange: this.handleInput.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"primaryButton form_group upload_video_btn\",\n                onClick: () => this.submitEdit(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UploadVideoForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n\n  getVideo() {\n    fetch('/videostreaming/singleadminvideo.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vidid: this.props.match.params.id\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        thisvideo: responseJSON['output'][0]['data'][0],\n        videotitle: responseJSON['output'][0]['data'][0].videotitle,\n        videoshortdescription: responseJSON['output'][0]['data'][0].videodescription,\n        videofulldescription: responseJSON['output'][0]['data'][0].videofulldescription,\n        videouploader: this.props.match.params.id,\n        isloaded: true\n      });\n      console.log(responseJSON['output'][0]['data'][0]);\n    });\n  }\n\n}\n\nexport default EditVideo;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/EditVideo.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaEye","FaSquare","FaShareAlt","FaPencilAlt","Thumbnailbg","User","IndexTabs","UploadVideoForm","AlertComponent","Gif","EditVideo","constructor","props","submitEdit","formData","FormData","state","videouploader","videotitle","videoshortdescription","videofulldescription","append","Mylabel","showAlert","setState","alerttitle","alertcontent","alerttype","fetch","method","body","headers","Accept","then","response","json","responseJSON","status","console","log","setTimeout","catch","error","setShow","e","showmodal","setShow2","showmodal2","showEdit","showedit","getUserEmail","useremail","sessionStorage","getItem","thisvideo","videocategory","crop","channel","tags","togglealert","ischannelAvailable","mychannels","isloaded","handleInput","event","target","value","name","getChannels","JSON","stringify","componentDidMount","getVideo","render","user","color","bind","vidid","match","params","id","videodescription"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt, FaPencilAlt } from 'react-icons/fa'\nimport Thumbnailbg from './../assets/images/bgthumbnail.png'\nimport User from './../assets/images/user.png'\nimport IndexTabs from './components/IndexTabs'\nimport UploadVideoForm from './components/UploadVideoForm'\nimport AlertComponent from './../reuseables/Alert'\nimport Gif from '../assets/images/mygif.gif'\n\n\n\nclass EditVideo extends Component {\n    constructor(props){\n       super(props);\n       this.state={\n           showmodal: false,\n           showedit: false,\n           showmodal2: false,\n           thisvideo:[],\n           videouploader:'',\n           videotitle:'',\n           videocategory: '',\n           crop:  '',\n           channel:  '',\n           videoshortdescription:'',\n           videofulldescription:'',\n           tags:'',\n           togglealert:false,\n           alerttitle:'', alertcontent:'', alerttype:'',\n           ischannelAvailable: false,\n           mychannels:[],\n           isloaded:false,\n          \n\n       }\n    }\n\n showAlert(e){\n     this.setState({\n         togglealert: e\n     })\n  }\n \n  handleInput(event) {\n       const target = event.target;\n       const value = target.value;\n       const name = target.name;\n       this.setState({\n         [name]: value\n       });\n     }\n\n\n \n\n\n\n\nsubmitEdit =() =>{\n\n const formData = new FormData();\n \n if (this.state.videouploader != null) {\n     if (this.state.videotitle !='') {\n        if (this.state.videoshortdescription !='') {\n           if (this.state.videofulldescription !='') {\n             formData.append(\"videotitle\", this.state.videotitle);\n             formData.append(\"videoshortdescription\", this.state.videoshortdescription);\n             formData.append(\"videofulldescription\", this.state.videofulldescription);\n             formData.append(\"programid\", this.state.videouploader);\n\n\n             const Mylabel = <p>Please wait <img src={Gif} className=\"alertloader\"/> </p>;\n             this.showAlert(true);\n               this.setState({\n                 alerttitle:'Uploading', alertcontent:Mylabel, alerttype:'success'\n              })\n             fetch('/videostreaming/editprogram.php',\n                 {\n                     method: 'POST',                   \n                     body: formData,\n                     headers: {\n                         Accept: 'application/json',\n                       },\n                 }\n             ).then((response) => response.json())\n             .then((responseJSON) => {\n                let status = responseJSON['output'][0]['status'];\n\n                if (status == 'true') {\n                    this.setState({\n                        alerttitle:'Success!', alertcontent:'The programme has been edited successfully', alerttype:'success'\n                     })\n                }\n        \n                console.log(responseJSON);\n           \n             setTimeout(() => {\n               this.showAlert(false);\n             }, 4000);\n           \n             }).catch((error) => {\n                console.log(error);  \n             \n             })\n\n           }else{\n             this.showAlert(true);\n             this.setState({\n               alerttitle:'Error', alertcontent: 'Please fill the programme full description box', alerttype:'warning'\n             })\n           }\n        }else{\n         this.showAlert(true);\n         this.setState({\n           alerttitle:'Error', alertcontent: 'Please fill the programme short description box', alerttype:'warning'\n         })\n        }\n     }else{\n       this.showAlert(true);\n       this.setState({\n         alerttitle:'Error', alertcontent: 'Please fill the programme title box', alerttype:'warning'\n       })\n     }\n }else{\n   this.showAlert(true);\n   this.setState({\n     alerttitle:'Error', alertcontent: 'Please login before you can edit this programme', alerttype:'warning'\n   })\n }\n \n setTimeout(() => {\n   this.showAlert(false);\n }, 4000);\n\n}\n\n\n\n\ngetChannels(){\n let useremail =  sessionStorage.getItem('userReg');\n   fetch('/videostreaming/mychannels.php', {\n         method: 'POST',\n         headers: {\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n            useremail: useremail\n         })\n     })\n \n     .then((response) => response.json())\n     .then((responseJSON) => {\n         if (responseJSON['output'][0]['success'] == 'true') {\n             this.setState({\n                  ischannelAvailable: true,\n                  mychannels: responseJSON['output'][0]['data']\n             })\n          }\n         // console.log(responseJSON['output']);\n         }).catch((error) =>{\n            // console.log(error);\n         })\n \n}\n setShow = (e) =>{\n   this.setState({\n       showmodal:e\n   })\n }\n\n\n\n  setShow2 = (e) =>{\n    this.setState({\n        showmodal2:e,\n        showmodal:false\n    })\n  }\n\n showEdit = (e) =>{\n   this.setState({\n       showedit:e\n   })\n }\n  \n getUserEmail = () =>{\n let useremail =  sessionStorage.getItem('userReg');\n this.setState({\n     videouploader:useremail\n })\n }\n\n componentDidMount(){\n     this.getUserEmail();  \n     this.getChannels();\n     this.getVideo();\n          \n }\n    render() {\n       const {user}  = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle, mychannels} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar showmodal1={() => this.setShow(true)}/>\n                <div className=\"content\">\n                <Header />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                  <div className=\"user_wrapper\">\n                    \n                  <div className=\"file_form_wrapper3\">\n                           <div className=\"form_group\">\n                                <label>Programme Title [30 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <input type=\"text\"  \n                                       name=\"videotitle\"\n                                       value={this.state.videotitle} \n                                       onChange={this.handleInput.bind(this)}\n                                       maxLength={30}/>\n                           </div>\n                          \n\n                           <div className=\"form_group form_group2\">\n                                <label>Programme Short Details [64 characters max]<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videoshortdescription\"\n                                          value={this.state.videoshortdescription} \n                                          onChange={this.handleInput.bind(this)}\n                                          maxLength={64}></textarea>\n                           </div>\n\n                           <div className=\"form_group \">\n                                <label>Programme Full Details<s style={{color:'tomato'}}>*</s></label>\n                                <textarea name=\"videofulldescription\"\n                                          value={this.state.videofulldescription} \n                                          onChange={this.handleInput.bind(this)}></textarea>\n                           </div>\n\n\n                        \n                           <div className=\"primaryButton form_group upload_video_btn\" onClick={() =>this.submitEdit()}>\n                               <span>Save</span>\n                           </div>\n                          \n                        </div>\n                  </div>\n\n                  <div>\n                  <UploadVideoForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                  </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    getVideo(){      \n        fetch('/videostreaming/singleadminvideo.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                vidid: this.props.match.params.id,\n            })\n        })\n    \n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    thisvideo: responseJSON['output'][0]['data'][0],\n                    videotitle: responseJSON['output'][0]['data'][0].videotitle,\n                    videoshortdescription: responseJSON['output'][0]['data'][0].videodescription,\n                    videofulldescription: responseJSON['output'][0]['data'][0].videofulldescription,\n                    videouploader:this.props.match.params.id,\n                    isloaded:true\n                })\n                console.log(responseJSON['output'][0]['data'][0]);\n            })\n       \n    }\n    \n    \n\n}\n       \n\n\nexport default EditVideo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}