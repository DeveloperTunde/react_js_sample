{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/Videoview.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaSearch, FaUser, FaHome, FaEye, FaEyeSlash, FaSquare, FaDotCircle, FaShareAlt, FaThumbsUp } from 'react-icons/fa';\nimport ReactPlayer from 'react-player/lazy';\nimport UploadVideoForm from './components/UploadVideoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Videoview extends Component {\n  constructor() {\n    super();\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.setShow2 = e => {\n      this.setState({\n        showmodal2: e,\n        showmodal: false\n      });\n    };\n\n    this.ref = player => {\n      this.player = player;\n    };\n\n    this.handlePlayAndPause = () => {\n      this.setState(prevState => ({\n        shouldPlay: !prevState.shouldPlay\n      }));\n    };\n\n    this.fetchVideo = () => {\n      fetch('/videostreaming/singlevideo.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vidid: this.props.match.params.id\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        this.setState({\n          videos: responseJSON['output'][0]['data'][0]\n        });\n        console.log(responseJSON['output'][0]['data']);\n      });\n    };\n\n    this.updateViews = () => {\n      let useremail = localStorage.getItem('userReg');\n      fetch('/videostreaming/updateviews.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          vidid: this.props.match.params.id\n        })\n      }).then(response => response.json()).then(responseJSON => {//  console.log(responseJSON);\n      });\n    };\n\n    this.updateLike = () => {\n      let useremail = localStorage.getItem('userReg');\n      fetch('/videostreaming/likevideo.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          vidid: this.props.match.params.id\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        let response = responseJSON['output'][0]['data'];\n\n        if (response == 'success') {//console.log(response);\n        }\n      });\n    };\n\n    this.checkLikes = () => {\n      let useremail = localStorage.getItem('userReg');\n      fetch('/videostreaming/updatelikes.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n          vidid: this.props.match.params.id\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        let liked = responseJSON['output'][0]['liked'];\n        let counter = responseJSON['output'][0]['counter'];\n        this.setState({\n          counter\n        });\n\n        if (liked == 'yes') {\n          this.setState({\n            toggleLike: true\n          });\n        } else {\n          this.setState({\n            toggleLike: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showmodal2: false,\n      isLoaded: false,\n      isLoadedside: false,\n      videos: [],\n      video: [],\n      shouldPlay: false,\n      currenttime: 0,\n      navVisible: true,\n      searchVisible: true,\n      datas: '',\n      value: '',\n      toggleLike: false,\n      counter: 0\n    };\n  }\n\n  changeShouldPlay() {\n    this.setState({\n      shouldPlay: true\n    });\n  }\n\n  changeShouldPause() {\n    this.setState({\n      shouldPlay: false\n    });\n  }\n\n  getCurrentTime(id) {\n    let index = id - 1;\n    this.setState({\n      currenttime: this.ref.currentTime()\n    });\n  }\n\n  refreshPage() {\n    setTimeout(this.fetchVideo(), 1000);\n  }\n\n  componentDidMount() {\n    this.fetchVideo();\n    this.updateViews();\n    this.interval = setInterval(() => this.checkLikes(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      videos,\n      counter,\n      toggleLike\n    } = this.state;\n    console.log(videos);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        showmodal1: () => this.setShow(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoview_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoview_left_a\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"videoview_left_top_a\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"videoview_left_video_a\",\n                  children: /*#__PURE__*/_jsxDEV(ReactPlayer // Disable download button\n                  , {\n                    config: {\n                      file: {\n                        attributes: {\n                          controlsList: 'nodownload'\n                        }\n                      }\n                    } // Disable right click\n                    ,\n                    onContextMenu: e => e.preventDefault(),\n                    ref: this.ref,\n                    style: {\n                      position: 'relative',\n                      top: 0,\n                      left: 0\n                    },\n                    url: '../../' + videos.videourl,\n                    width: \"100%\",\n                    height: \"auto\",\n                    playing: true,\n                    controls: true,\n                    onPlay: () => this.changeShouldPlay(),\n                    onPause: () => this.changeShouldPause()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"videoview_content_wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"videoview_content_a\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"videoview_content_a_a\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: videos.videotitle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 80\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"videoview_content_c\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: videos.videofulldescription\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(UploadVideoForm, {\n                  openModal: this.state.showmodal,\n                  closeModal: () => this.setShow(false),\n                  openModal2: this.state.showmodal2,\n                  opensecondModal: () => this.setShow2(true),\n                  closeModal2: () => this.setShow2(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Videoview;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/Videoview.jsx"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaSearch","FaUser","FaHome","FaEye","FaEyeSlash","FaSquare","FaDotCircle","FaShareAlt","FaThumbsUp","ReactPlayer","UploadVideoForm","Videoview","constructor","setShow","e","setState","showmodal","setShow2","showmodal2","ref","player","handlePlayAndPause","prevState","shouldPlay","fetchVideo","fetch","method","headers","body","JSON","stringify","vidid","props","match","params","id","then","response","json","responseJSON","videos","console","log","updateViews","useremail","localStorage","getItem","updateLike","checkLikes","liked","counter","toggleLike","state","isLoaded","isLoadedside","video","currenttime","navVisible","searchVisible","datas","value","changeShouldPlay","changeShouldPause","getCurrentTime","index","currentTime","refreshPage","setTimeout","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","file","attributes","controlsList","preventDefault","position","top","left","videourl","videotitle","videofulldescription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaSearch, FaUser, FaHome, FaEye, FaEyeSlash, FaSquare, FaDotCircle, FaShareAlt, FaThumbsUp } from 'react-icons/fa'\nimport ReactPlayer from 'react-player/lazy'\nimport UploadVideoForm from './components/UploadVideoForm'\n\n\nclass Videoview extends Component {\n    constructor() {\n        super();\n        this.state = {\n            showmodal: false,\n            showmodal2: false,\n            isLoaded: false,\n            isLoadedside: false,\n            videos: [],\n            video: [],\n            shouldPlay: false,\n            currenttime: 0,\n            navVisible: true,\n            searchVisible: true,\n            datas: '',\n            value: '',\n            toggleLike:false,\n            counter:0,\n        }\n\n    }\n  \n\n    setShow = (e) =>{\n        this.setState({\n            showmodal:e\n        })\n      }\n    \n      setShow2 = (e) =>{\n        this.setState({\n            showmodal2:e,\n            showmodal:false\n        })\n      }\n      \n    ref = player => {\n        this.player = player\n    }\n\n    handlePlayAndPause = () => {\n        this.setState(prevState => ({\n            shouldPlay: !prevState.shouldPlay\n        }));\n    }\n\n    changeShouldPlay() {\n        this.setState({\n            shouldPlay: true\n        })\n    }\n\n    changeShouldPause() {\n        this.setState({\n            shouldPlay: false\n        })\n    }\n    getCurrentTime(id) {\n        let index = id - 1;\n        this.setState({\n            currenttime: this.ref.currentTime()\n        });\n    }\n\n    refreshPage() {\n        setTimeout(\n            this.fetchVideo(), 1000)\n    }\n\n    componentDidMount() {\n        this.fetchVideo();\n        this.updateViews();\n        this.interval = setInterval(() => this.checkLikes(), 1000);\n    }\n\n\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { videos, counter, toggleLike } = this.state;\n        console.log(videos);\n        return (\n            <div className=\"body\">\n                <Sidebar showmodal1={() => this.setShow(true)}/>\n                <div className=\"content\">\n                <Header />\n                <div className=\"page_container\">\n                   <div className=\"videoview_wrapper\">\n                        <div className=\"videoview_left_a\">\n                            <div className=\"videoview_left_top_a\">\n\n                                <div className=\"videoview_left_video_a\">\n                                <ReactPlayer\n                                // Disable download button\n                                config={{ file: { attributes: { controlsList: 'nodownload' } } }}\n\n                                // Disable right click\n                                onContextMenu={e => e.preventDefault()}\n                                ref={this.ref}\n                                style={{ position: 'relative', top: 0, left: 0, }}\n                                url={'../../' + videos.videourl}\n                                width='100%'\n                                height='auto'\n                                playing={true}\n                                controls={true}\n                                onPlay={() => this.changeShouldPlay()}\n                                onPause={() => this.changeShouldPause()}\n                            />\n                                </div>\n\n                                <div className=\"videoview_content_wrapper\">\n                                    <div className=\"videoview_content_a\">\n                                        <div className=\"videoview_content_a_a\"><span>{videos.videotitle}</span></div>\n                                       \n                                    </div>\n                                    \n                                    <div className=\"videoview_content_c\"> \n                                        <p>{videos.videofulldescription}</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                    <UploadVideoForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                  </div>\n                            \n                        </div>\n                                           \n                   </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    fetchVideo = () => {\n        fetch('/videostreaming/singlevideo.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                vidid: this.props.match.params.id\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    videos: responseJSON['output'][0]['data'][0],\n                })\n                console.log(responseJSON['output'][0]['data']);\n            })\n    }\n\n\n    updateViews = () => {\n       let useremail = localStorage.getItem('userReg');\n        fetch('/videostreaming/updateviews.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                useremail: useremail,\n                vidid: this.props.match.params.id\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n            //  console.log(responseJSON);\n            })\n    }\n\n    updateLike = () => {\n        let useremail = localStorage.getItem('userReg');\n         fetch('/videostreaming/likevideo.php', {\n             method: 'POST',\n             headers: {\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify({\n                 useremail: useremail,\n                 vidid: this.props.match.params.id\n             })\n         })\n \n             .then((response) => response.json())\n             .then((responseJSON) => {\n               let response = responseJSON['output'][0]['data'];\n               if(response == 'success'){\n                \n                  //console.log(response);\n               }\n             })\n     }\n\n\n     checkLikes = () => {\n        let useremail = localStorage.getItem('userReg');\n         fetch('/videostreaming/updatelikes.php', {\n             method: 'POST',\n             headers: {\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify({\n                 useremail: useremail,\n                 vidid: this.props.match.params.id\n             })\n         })\n \n             .then((response) => response.json())\n             .then((responseJSON) => {\n               let liked = responseJSON['output'][0]['liked'];\n               let counter  = responseJSON['output'][0]['counter'];\n                this.setState({\n                    counter\n                })\n               if(liked == 'yes'){\n                this.setState({\n                    toggleLike:true\n                })\n               }else{\n                this.setState({\n                    toggleLike:false\n                })\n               }\n             })\n     }\n}\n\nexport default Videoview;\n"]},"metadata":{},"sourceType":"module"}