{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/admin/Login.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport '../assets/css/header.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaShare, FaEye, FaEyeSlash } from 'react-icons/fa';\nimport Thumbnaila from '../assets/images/thumbnaila.png';\nimport { uid, suid } from 'rand-token';\nimport AlertComponent from '../reuseables/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: '',\n      password: '',\n      email: '',\n      pass: true,\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: ''\n    };\n  }\n\n  setShow(e) {\n    let alertstate = this.state.togglealert;\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  togglePassword() {\n    let pass = this.state.pass;\n    this.setState({\n      pass: !pass\n    });\n  }\n\n  async saveItem(item, data) {\n    try {\n      await sessionStorage.setItem(item, data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  adminLogin() {\n    if (this.state.email != '') {\n      if (this.state.password1 != '') {\n        fetch('/videostreaming/adminlogin.php', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n        }).then(response => response.json()).then(responseJSON => {\n          console.log(responseJSON);\n          let responsestatus = responseJSON[\"output\"][0]['status'];\n          this.setShow(true);\n          console.log(responsestatus);\n\n          if (responsestatus == 'true') {\n            this.saveItem('ValidateAdmin', this.state.email);\n            this.setState({\n              hasToken: true\n            });\n            this.setState({\n              alerttitle: 'Success!',\n              alertcontent: 'Login success',\n              alerttype: 'success'\n            });\n            window.location = '/admin/';\n          } else {\n            this.setState({\n              alerttitle: 'Sorry!',\n              alertcontent: 'Incorrect Password/Email',\n              alerttype: 'warning'\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        this.setShow(true);\n        this.setState({\n          alerttitle: 'Form Error!',\n          alertcontent: 'Please fill the password box',\n          alerttype: 'danger'\n        });\n      }\n    } else {\n      this.setShow(true);\n      this.setState({\n        alerttitle: 'Form Error!',\n        alertcontent: 'Please fill the email box',\n        alerttype: 'danger'\n      });\n    }\n  }\n\n  getUset() {\n    this.setState({\n      user: localStorage.getItem('userReg')\n    });\n  }\n\n  componentDidMount() {\n    this.getUset();\n  }\n\n  render() {\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-login\",\n        children: [this.state.togglealert ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginalert\",\n          children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n            title: alerttitle,\n            showalert: togglealert,\n            content: alertcontent,\n            type: alerttype,\n            closealert: () => this.setShow(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_form_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Admin Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group_lg form_group_input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: this.state.email,\n                onChange: this.handleInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_group_lg form_group_input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: this.state.pass ? 'password' : 'text',\n                name: \"password\",\n                placeholder: \"Password\",\n                value: this.state.password,\n                onChange: this.handleInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: [this.state.pass ? /*#__PURE__*/_jsxDEV(FaEye, {\n                  onClick: () => this.togglePassword(true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(FaEyeSlash, {\n                  onClick: () => this.togglePassword(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 107\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primaryButton form_group_lg reg_submit_btn\",\n              onClick: () => this.adminLogin(),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/admin/Login.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaShare","FaEye","FaEyeSlash","Thumbnaila","uid","suid","AlertComponent","Login","constructor","state","user","password","email","pass","togglealert","alerttitle","alertcontent","alerttype","setShow","e","alertstate","setState","handleInput","event","target","value","name","togglePassword","saveItem","item","data","sessionStorage","setItem","error","console","log","adminLogin","password1","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJSON","responsestatus","hasToken","window","location","catch","getUset","localStorage","getItem","componentDidMount","render","bind"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport '../assets/css/header.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaShare, FaEye, FaEyeSlash } from 'react-icons/fa'\nimport Thumbnaila from '../assets/images/thumbnaila.png'\nimport { uid, suid } from 'rand-token';\nimport AlertComponent from '../reuseables/Alert'\n\n\n\nclass Login extends Component {\n   \n     constructor(){\n        super();\n        this.state={\n            user: '',\n            password:'',\n            email:'',\n            pass:true,\n            togglealert:false,\n            alerttitle:'', alertcontent:'', alerttype:''\n        }\n     }\n\n\nsetShow(e){\n let alertstate = this.state.togglealert;\n    this.setState({\n        togglealert: e\n    })\n}\nhandleInput(event) {\n const target = event.target;\n const value = target.value;\n const name = target.name;\n this.setState({\n      [name]: value\n });\n}\n        \ntogglePassword() {\n    let pass = this.state.pass;\n    this.setState({\n        pass: !pass\n    })\n}\n\nasync saveItem(item, data) {\n    try {\n        await sessionStorage.setItem(item, data)\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nadminLogin() {\n        if(this.state.email != ''){\n                if(this.state.password1 != ''){        \n                        fetch('/videostreaming/adminlogin.php', {\n                            method: 'POST',\n                            headers: {\n                                Accept: 'application/json',\n                                'Content-Type': 'application/json',                    \n                            },\n                            body: JSON.stringify({\n                                email: this.state.email,\n                                password: this.state.password\n                    \n                            })\n                        })\n                    \n                            .then((response) => response.json())\n                            .then((responseJSON) => {\n                    \n                            console.log(responseJSON);\n                            let responsestatus = responseJSON[\"output\"][0]['status'];\n\n                            this.setShow(true);\n                                   \n                            console.log(responsestatus);\n                            if (responsestatus == 'true') {\n                            this.saveItem('ValidateAdmin', this.state.email);\n                            this.setState({\n                                 hasToken: true\n                             }) \n                            this.setState({\n                                 alerttitle:'Success!', alertcontent:'Login success', alerttype:'success'\n                             })\n                             window.location='/admin/'\n                            }else{\n                             this.setState({\n                                   alerttitle:'Sorry!', alertcontent:'Incorrect Password/Email', alerttype:'warning'\n                             })\n                             }\n                               \n                            }).catch((error) => {\n                               console.log(error);  \n                            \n                            })\n                    \n                }else {\n                 this.setShow(true);\n                 this.setState({\n                     alerttitle:'Form Error!', alertcontent:'Please fill the password box', alerttype:'danger'\n                 })\n             }\n            }else {\n                 this.setShow(true);\n                 this.setState({\n                    alerttitle:'Form Error!', alertcontent:'Please fill the email box', alerttype:'danger'\n                 })\n             }\n       \n\n}\n\ngetUset(){\n    this.setState({\n        user:localStorage.getItem('userReg')\n    })\n}\ncomponentDidMount(){\n  this.getUset();\n}\n\n    render() {\n        const {togglealert, alertcontent, alerttype, alerttitle} = this.state;\n        return (\n            <div className=\"body\">\n               \n                <div className=\"content-login\">\n                {(this.state.togglealert) ? \n                  <div className=\"loginalert\">\n                      <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent} \n                      type={alerttype}\n                      closealert={() => this.setShow(false)}/>\n                  </div> : <div></div>}\n                <div className=\"page_container\">\n                \n                     <div className=\"user_form_wrapper\">\n                        <div className=\"login_title\">\n                            <span>Admin Login</span>\n                        </div>\n                        <div className=\"form_group_lg form_group_input\">\n                            <input type=\"text\" \n                             name=\"email\"\n                             placeholder=\"Email\" \n                             value={this.state.email} \n                             onChange={this.handleInput.bind(this)}/>\n                        </div>\n                        <div className=\"form_group_lg form_group_input\">\n                            <input \n                             type={(this.state.pass) ? 'password' : 'text'} \n                             name=\"password\"\n                             placeholder=\"Password\" \n                             value={this.state.password} \n                             onChange={this.handleInput.bind(this)}/>\n                            <i>{(this.state.pass) ? <FaEye onClick={() => this.togglePassword(true)} /> : <FaEyeSlash onClick={() => this.togglePassword(false)} />} </i>\n                        </div>\n                      \n                        <div className=\"primaryButton form_group_lg reg_submit_btn\" onClick={() =>this.adminLogin() }>\n                               <span>Login</span>\n                        </div>\n                        \n                     </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}