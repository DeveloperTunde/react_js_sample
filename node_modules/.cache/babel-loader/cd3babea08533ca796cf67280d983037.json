{"ast":null,"code":"var _jsxFileName = \"/Users/developertunde/iitatv/src/dashboard/Setting.jsx\";\nimport React, { Component, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css';\nimport '../assets/css/styles.css';\nimport '../assets/css/user.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare, FaShareAlt, FaPencilAlt } from 'react-icons/fa';\nimport Thumbnailbg from './../assets/images/bgthumbnail.png';\nimport User from './../assets/images/user.png';\nimport IndexTabs from './components/IndexTabs';\nimport UploadVideoForm from './components/UploadVideoForm';\nimport AlertComponent from './../reuseables/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserIndex extends Component {\n  constructor() {\n    super();\n\n    this.setShow = e => {\n      this.setState({\n        showmodal: e\n      });\n    };\n\n    this.setShow2 = e => {\n      this.setState({\n        showmodal2: e,\n        showmodal: false\n      });\n    };\n\n    this.checkLogin = () => {\n      let useremail = sessionStorage.getItem('userReg');\n      fetch('/videostreaming/verifylogin.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail\n        })\n      }).then(response => response.json()).then(responseJSON => {\n        if (responseJSON['output'][0]['success'] == 'true') {\n          this.setState({\n            isLoggedin: true\n          });\n        } else {\n          window.location = '../login';\n        } // console.log(responseJSON);\n\n      }).catch(error => {// console.log(error);\n      });\n    };\n\n    this.submitUpdate = () => {\n      const formData = new FormData();\n\n      if (this.state.uploadFile != '') {\n        formData.append(\"profilepicture\", this.state.uploadFile);\n      }\n\n      formData.append(\"firstname\", this.state.userfirstname);\n      formData.append(\"lastname\", this.state.userlastname);\n      formData.append(\"useremail\", this.state.useremail);\n      this.showAlert(true);\n      this.setState({\n        alerttitle: 'Saving',\n        alertcontent: 'Please wait...',\n        alerttype: 'success'\n      });\n      fetch('/videostreaming/updateuserprofile.php', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          Accept: 'application/json'\n        }\n      }).then(response => response.json()).then(responseJSON => {\n        if (responseJSON['output'][0]['status'] == 'true') {\n          this.setState({\n            alerttitle: 'Success!',\n            alertcontent: 'saved successfully',\n            alerttype: 'success'\n          });\n        }\n\n        console.log(responseJSON);\n        setTimeout(() => {\n          this.showAlert(false);\n        }, 4000);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      showmodal: false,\n      showmodal2: false,\n      isLoggedin: false,\n      useremail: '',\n      myvideos: [],\n      allsub: 0,\n      user: [],\n      userfirstname: '',\n      userlastname: '',\n      file: '',\n      uploadFile: '',\n      togglealert: false,\n      alerttitle: '',\n      alertcontent: '',\n      alerttype: '',\n      isrightside: 'desktop_display',\n      isleftsidebar: 'desktop_display'\n    };\n  }\n\n  getUser() {\n    let email = sessionStorage.getItem('userReg');\n    this.setState({\n      useremail: email\n    });\n  }\n\n  componentDidMount() {\n    this.checkLogin();\n    this.getUser();\n    this.fetchMyVideos();\n    this.fetchThisUser();\n  }\n\n  handleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async setUploadFile(e) {\n    this.setState({\n      uploadFile: e[0]\n    });\n    let file = e[0];\n    this.setState({\n      file: URL.createObjectURL(e[0])\n    });\n  }\n\n  showAlert(e) {\n    this.setState({\n      togglealert: e\n    });\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    const {\n      togglealert,\n      alertcontent,\n      alerttype,\n      alerttitle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        leftsidebar: this.state.isleftsidebar,\n        closeLeftSidebar: () => this.toggleLeftSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          openLeftSidebar: () => this.toggleLeftSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page_container\",\n          children: [this.state.togglealert == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadalert\",\n            children: /*#__PURE__*/_jsxDEV(AlertComponent, {\n              title: alerttitle,\n              showalert: togglealert,\n              content: alertcontent,\n              type: alerttype,\n              closealert: () => this.showAlert(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_account_top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user_account_top_left\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user_account_top_left_a\",\n                  children: this.state.file != '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: this.state.file,\n                    alt: \"Profile Picture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 58\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.profilepic,\n                    alt: \"Profile Picture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user_account_top_left_b\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [user.userfirstname, \" \", user.userlastname]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"limeColor\",\n                    onClick: () => this.inputElement.click(),\n                    children: \"Change profile picture \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    hidden: true,\n                    ref: input => this.inputElement = input,\n                    onChange: e => this.setUploadFile(e.target.files)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user_account_top_right2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"primaryButton save_bbn\",\n                  onClick: () => this.submitUpdate(),\n                  children: \" Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_account_bottom2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"useremail\",\n                  value: this.state.useremail,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 30,\n                  className: \"border_light grey_background\",\n                  readOnly: true,\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Firstname \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"userfirstname\",\n                  value: this.state.userfirstname,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 30,\n                  className: \"border_light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Lastname \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"userlastname\",\n                  value: this.state.userlastname,\n                  onChange: this.handleInput.bind(this),\n                  maxLength: 30,\n                  className: \"border_light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(UploadVideoForm, {\n              openModal: this.state.showmodal,\n              closeModal: () => this.setShow(false),\n              openModal2: this.state.showmodal2,\n              opensecondModal: () => this.setShow2(true),\n              closeModal2: () => this.setShow2(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n  fetchThisUser() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/user.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        useremail: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        user: responseJSON['output'][0]['user'][0],\n        allsub: responseJSON['output'][0]['allsubscription'],\n        userfirstname: responseJSON['output'][0]['user'][0].userfirstname,\n        userlastname: responseJSON['output'][0]['user'][0].userlastname\n      }); //console.log(responseJSON['output'][0]);\n      //console.log( this.state.useremail);\n    }).catch(error => {//console.log(error);\n    });\n  }\n\n  fetchMyVideos() {\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/myvideos.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: useremail\n      })\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        isLoaded: true,\n        myvideos: responseJSON\n      }); // console.log(responseJSON['output'][0]);\n      //console.log( this.state.useremail);\n    }).catch(error => {//console.log(error);\n    });\n  }\n\n  toggleLeftSidebar() {\n    let isrightsidebar = this.state.isrightside;\n\n    if (isrightsidebar == 'mobile_display') {\n      this.setState({\n        isrightside: 'desktop_display'\n      });\n    }\n\n    let isleftsidebar = this.state.isleftsidebar;\n\n    if (isleftsidebar == 'desktop_display') {\n      this.setState({\n        isleftsidebar: 'mobile_display'\n      });\n    } else {\n      this.setState({\n        isleftsidebar: 'desktop_display'\n      });\n    }\n  }\n\n}\n\nexport default UserIndex;","map":{"version":3,"sources":["/Users/developertunde/iitatv/src/dashboard/Setting.jsx"],"names":["React","Component","useState","BrowserRouter","Router","Switch","Route","Link","Header","Sidebar","FaEye","FaSquare","FaShareAlt","FaPencilAlt","Thumbnailbg","User","IndexTabs","UploadVideoForm","AlertComponent","UserIndex","constructor","setShow","e","setState","showmodal","setShow2","showmodal2","checkLogin","useremail","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","responseJSON","isLoggedin","window","location","catch","error","submitUpdate","formData","FormData","state","uploadFile","append","userfirstname","userlastname","showAlert","alerttitle","alertcontent","alerttype","Accept","console","log","setTimeout","myvideos","allsub","user","file","togglealert","isrightside","isleftsidebar","getUser","email","componentDidMount","fetchMyVideos","fetchThisUser","handleInput","event","target","value","name","setUploadFile","URL","createObjectURL","render","toggleLeftSidebar","profilepic","inputElement","click","input","files","bind","isLoaded","isrightsidebar"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\n\nimport { BrowserRouter, Router, Switch, Route, Link } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport '../assets/css/videos.css'\nimport '../assets/css/styles.css'\nimport '../assets/css/user.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaEye, FaSquare,FaShareAlt, FaPencilAlt } from 'react-icons/fa'\nimport Thumbnailbg from './../assets/images/bgthumbnail.png'\nimport User from './../assets/images/user.png'\nimport IndexTabs from './components/IndexTabs'\nimport UploadVideoForm from './components/UploadVideoForm'\nimport AlertComponent from './../reuseables/Alert'\n\n\n\nclass UserIndex extends Component {\n   \n     constructor(){\n        super();\n        this.state={\n            showmodal: false,\n            showmodal2: false,\n            isLoggedin: false,\n            useremail: '',\n            myvideos:[],\n            allsub:0,\n            user:[],\n            userfirstname:'',\n            userlastname:'',\n            file:'',\n            uploadFile:'',\n            togglealert:false,\n            alerttitle:'', alertcontent:'', alerttype:'',\n            isrightside:'desktop_display',\n            isleftsidebar:'desktop_display'\n        }\n     }\n\n\n\n  setShow = (e) =>{\n    this.setState({\n        showmodal:e\n    })\n  }\n\n  setShow2 = (e) =>{\n    this.setState({\n        showmodal2:e,\n        showmodal:false\n    })\n  }\n\n  checkLogin = () =>{\n    let useremail = sessionStorage.getItem('userReg');\n    fetch('/videostreaming/verifylogin.php', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: useremail,\n      })\n    })\n        .then((response) => response.json())\n        .then((responseJSON) => {\n            if (responseJSON['output'][0]['success'] == 'true') {\n                this.setState({\n                    isLoggedin:true\n                })\n            }else{\n                window.location ='../login'\n              }\n        // console.log(responseJSON);\n        }).catch((error) =>{\n           // console.log(error);\n        })\n\n         \n      \n  }\n  getUser(){\n      let email =sessionStorage.getItem('userReg');\n    this.setState({\n        useremail: email\n    })\n  }\n\n  componentDidMount(){\n      this.checkLogin();\n      this.getUser();\n      this.fetchMyVideos();\n      this.fetchThisUser();\n  }\n\n\nhandleInput(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async setUploadFile(e){\n    this.setState({\n      uploadFile:e[0]\n    })\n    let file = e[0];\n    this.setState({\n        file: URL.createObjectURL(e[0])\n      })\n  \n  }\n  showAlert(e){\n    this.setState({\n        togglealert: e\n    })\n }\n  submitUpdate =() =>{\n\n    const formData = new FormData();\n    if (this.state.uploadFile !='' ) {\n        formData.append(\"profilepicture\", this.state.uploadFile);\n    }\n    formData.append(\"firstname\", this.state.userfirstname);\n    formData.append(\"lastname\", this.state.userlastname);\n    formData.append(\"useremail\", this.state.useremail);\n\n    this.showAlert(true);\n      this.setState({\n        alerttitle:'Saving', alertcontent:'Please wait...', alerttype:'success'\n     })\n    fetch('/videostreaming/updateuserprofile.php',\n        {\n            method: 'POST',                   \n            body: formData,\n            headers: {\n                Accept: 'application/json',\n              },\n        }\n    ).then((response) => response.json())\n    .then((responseJSON) => {\n        if (responseJSON['output'][0]['status'] =='true') {\n            this.setState({\n                alerttitle:'Success!', alertcontent:'saved successfully', alerttype:'success'\n             }) \n        }\n    console.log(responseJSON);\n\n  \n    setTimeout(() => {\n      this.showAlert(false);\n    }, 4000);\n  \n    }).catch((error) => {\n       console.log(error);  \n    \n    })\n  }\n    render() {\n       const {user}  = this.state;\n       const {togglealert, alertcontent, alerttype, alerttitle} = this.state;  \n        return (\n            <div className=\"body\">\n                <Sidebar leftsidebar={this.state.isleftsidebar}  closeLeftSidebar={() => this.toggleLeftSidebar()}/>\n                <div className=\"content\">\n                <Header openLeftSidebar={() => this.toggleLeftSidebar()} />\n                <div className=\"page_container\">\n                {(this.state.togglealert == true) ? \n                  <div className=\"uploadalert\">\n                    <AlertComponent \n                      title={alerttitle}\n                      showalert={togglealert} \n                      content={alertcontent}\n                      type={alerttype}\n                      closealert={() => this.showAlert(false)}/>\n                  </div> : <div></div>} \n                  <div className=\"user_wrapper\">\n                    <div className=\"user_account_top\">\n                        <div className=\"user_account_top_left\">\n                            <div className=\"user_account_top_left_a\">\n                               {(this.state.file !='')?  <img src={this.state.file} alt=\"Profile Picture\" /> :  <img src={user.profilepic} alt=\"Profile Picture\" />}\n                            </div>\n                            <div className=\"user_account_top_left_b\">\n                                <span>{user.userfirstname} {user.userlastname}</span>\n                                <span className=\"limeColor\" onClick={() => this.inputElement.click()}>Change profile picture </span>\n                                <input type=\"file\" accept=\"image/*\"\n                                  hidden={true}\n                                  ref={input => this.inputElement = input}\n                                  onChange={(e) => this.setUploadFile(e.target.files)} \n                                  />\n                            </div>\n                        </div>\n                        <div className=\"user_account_top_right2\">\n                            <span className=\"primaryButton save_bbn\" onClick={() => this.submitUpdate()}> Save</span>\n                        </div>\n                    </div>\n                    <div className=\"user_account_bottom2\">\n\n                       <div className=\"form_group\">\n                          <label>Email</label>\n                          <input type=\"text\"  \n                                name=\"useremail\"\n                                value={this.state.useremail} \n                                onChange={this.handleInput.bind(this)}\n                                maxLength={30}\n                                className=\"border_light grey_background\"\n                                readOnly={true}\n                                disabled={true}/>\n                        </div>\n                        <div className=\"form_group\">\n                          <label>Firstname </label>\n                          <input type=\"text\"  \n                                name=\"userfirstname\"\n                                value={this.state.userfirstname} \n                                onChange={this.handleInput.bind(this)}\n                                maxLength={30}\n                                className=\"border_light\"/>\n                        </div>\n\n                        <div className=\"form_group\">\n                          <label>Lastname </label>\n                          <input type=\"text\"  \n                                name=\"userlastname\"\n                                value={this.state.userlastname} \n                                onChange={this.handleInput.bind(this)}\n                                maxLength={30}\n                                className=\"border_light\"/>\n                        </div>\n\n                     \n                          \n                         \n                          \n                    </div>\n                  </div>\n\n                  <div>\n                    <UploadVideoForm\n                     openModal={this.state.showmodal}\n                     closeModal={() => this.setShow(false)}\n                     openModal2={this.state.showmodal2}\n                     opensecondModal={() => this.setShow2(true)}\n                     closeModal2={() => this.setShow2(false)}\n                     />\n                  </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n\n    fetchThisUser(){\n       \n        let useremail = sessionStorage.getItem('userReg');\n       fetch('/videostreaming/user.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                useremail: useremail,\n\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    user: responseJSON['output'][0]['user'][0],\n                    allsub : responseJSON['output'][0]['allsubscription'],\n                    userfirstname: responseJSON['output'][0]['user'][0].userfirstname,\n                    userlastname: responseJSON['output'][0]['user'][0].userlastname\n                })\n                //console.log(responseJSON['output'][0]);\n                //console.log( this.state.useremail);\n            }).catch((error) =>{\n                //console.log(error);\n            })\n\n       \n    }\n\n\n    fetchMyVideos(){\n       \n        let useremail = sessionStorage.getItem('userReg');\n       fetch('/videostreaming/myvideos.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: useremail,\n\n            })\n        })\n\n            .then((response) => response.json())\n            .then((responseJSON) => {\n                this.setState({\n                    isLoaded: true,\n                    myvideos: responseJSON,\n                })\n                // console.log(responseJSON['output'][0]);\n                //console.log( this.state.useremail);\n            }).catch((error) =>{\n                //console.log(error);\n            })\n\n       \n    }\n\n    toggleLeftSidebar(){\n\n        let isrightsidebar = this.state.isrightside;\n        if (isrightsidebar == 'mobile_display') {\n            this.setState({\n                isrightside:'desktop_display'\n            })\n        }\n\n        let isleftsidebar = this.state.isleftsidebar;\n        if (isleftsidebar == 'desktop_display') {\n            this.setState({\n                isleftsidebar:'mobile_display'\n            })\n        }else{\n            this.setState({\n                isleftsidebar:'desktop_display'\n            })\n        }\n    }\n\n}\n       \n\n\nexport default UserIndex;\n\n\n\n"]},"metadata":{},"sourceType":"module"}